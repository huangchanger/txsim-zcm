// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grading.proto

#ifndef PROTOBUF_grading_2eproto__INCLUDED
#define PROTOBUF_grading_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "basic.pb.h"
// @@protoc_insertion_point(includes)
namespace sim_msg {
class Grading;
class GradingDefaultTypeInternal;
extern GradingDefaultTypeInternal _Grading_default_instance_;
class Grading_Acceleration;
class Grading_AccelerationDefaultTypeInternal;
extern Grading_AccelerationDefaultTypeInternal _Grading_Acceleration_default_instance_;
class Grading_Algorithm;
class Grading_AlgorithmDefaultTypeInternal;
extern Grading_AlgorithmDefaultTypeInternal _Grading_Algorithm_default_instance_;
class Grading_CarExpData;
class Grading_CarExpDataDefaultTypeInternal;
extern Grading_CarExpDataDefaultTypeInternal _Grading_CarExpData_default_instance_;
class Grading_Collision;
class Grading_CollisionDefaultTypeInternal;
extern Grading_CollisionDefaultTypeInternal _Grading_Collision_default_instance_;
class Grading_Control;
class Grading_ControlDefaultTypeInternal;
extern Grading_ControlDefaultTypeInternal _Grading_Control_default_instance_;
class Grading_DistHeadway;
class Grading_DistHeadwayDefaultTypeInternal;
extern Grading_DistHeadwayDefaultTypeInternal _Grading_DistHeadway_default_instance_;
class Grading_ExpData;
class Grading_ExpDataDefaultTypeInternal;
extern Grading_ExpDataDefaultTypeInternal _Grading_ExpData_default_instance_;
class Grading_Lane;
class Grading_LaneDefaultTypeInternal;
extern Grading_LaneDefaultTypeInternal _Grading_Lane_default_instance_;
class Grading_Planning;
class Grading_PlanningDefaultTypeInternal;
extern Grading_PlanningDefaultTypeInternal _Grading_Planning_default_instance_;
class Grading_Speed;
class Grading_SpeedDefaultTypeInternal;
extern Grading_SpeedDefaultTypeInternal _Grading_Speed_default_instance_;
class Grading_Statistics;
class Grading_StatisticsDefaultTypeInternal;
extern Grading_StatisticsDefaultTypeInternal _Grading_Statistics_default_instance_;
class Grading_Statistics_CustomDetail;
class Grading_Statistics_CustomDetailDefaultTypeInternal;
extern Grading_Statistics_CustomDetailDefaultTypeInternal _Grading_Statistics_CustomDetail_default_instance_;
class Grading_Statistics_Detail;
class Grading_Statistics_DetailDefaultTypeInternal;
extern Grading_Statistics_DetailDefaultTypeInternal _Grading_Statistics_Detail_default_instance_;
class Grading_Statistics_DetailItem;
class Grading_Statistics_DetailItemDefaultTypeInternal;
extern Grading_Statistics_DetailItemDefaultTypeInternal _Grading_Statistics_DetailItem_default_instance_;
class Grading_TimeHeadway;
class Grading_TimeHeadwayDefaultTypeInternal;
extern Grading_TimeHeadwayDefaultTypeInternal _Grading_TimeHeadway_default_instance_;
class Grading_TimeStamp;
class Grading_TimeStampDefaultTypeInternal;
extern Grading_TimeStampDefaultTypeInternal _Grading_TimeStamp_default_instance_;
class Grading_TrafficLight;
class Grading_TrafficLightDefaultTypeInternal;
extern Grading_TrafficLightDefaultTypeInternal _Grading_TrafficLight_default_instance_;
class Vec2;
class Vec2DefaultTypeInternal;
extern Vec2DefaultTypeInternal _Vec2_default_instance_;
class Vec3;
class Vec3DefaultTypeInternal;
extern Vec3DefaultTypeInternal _Vec3_default_instance_;
class Vec4;
class Vec4DefaultTypeInternal;
extern Vec4DefaultTypeInternal _Vec4_default_instance_;
}  // namespace sim_msg

namespace sim_msg {

namespace protobuf_grading_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_grading_2eproto

enum GradingCollisionState {
  GRADING_COLLISION_NOCOLLISION = 0,
  GRADING_COLLISION_VEHICLE = 1,
  GRADING_COLLISION_PEDESTRIAN = 2,
  GRADING_COLLISION_OBSTACLE = 3,
  GradingCollisionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingCollisionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingCollisionState_IsValid(int value);
const GradingCollisionState GradingCollisionState_MIN = GRADING_COLLISION_NOCOLLISION;
const GradingCollisionState GradingCollisionState_MAX = GRADING_COLLISION_OBSTACLE;
const int GradingCollisionState_ARRAYSIZE = GradingCollisionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingCollisionState_descriptor();
inline const ::std::string& GradingCollisionState_Name(GradingCollisionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingCollisionState_descriptor(), value);
}
inline bool GradingCollisionState_Parse(
    const ::std::string& name, GradingCollisionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingCollisionState>(
    GradingCollisionState_descriptor(), name, value);
}
enum GradingAlgorithmState {
  GRADING_ALGORITHM_RUNNING = 0,
  GRADING_ALGORITHM_TIMEOUT = 1,
  GRADING_ALGORITHM_THROWEXCEPTION = 2,
  GradingAlgorithmState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingAlgorithmState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingAlgorithmState_IsValid(int value);
const GradingAlgorithmState GradingAlgorithmState_MIN = GRADING_ALGORITHM_RUNNING;
const GradingAlgorithmState GradingAlgorithmState_MAX = GRADING_ALGORITHM_THROWEXCEPTION;
const int GradingAlgorithmState_ARRAYSIZE = GradingAlgorithmState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingAlgorithmState_descriptor();
inline const ::std::string& GradingAlgorithmState_Name(GradingAlgorithmState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingAlgorithmState_descriptor(), value);
}
inline bool GradingAlgorithmState_Parse(
    const ::std::string& name, GradingAlgorithmState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingAlgorithmState>(
    GradingAlgorithmState_descriptor(), name, value);
}
enum GradingTrafficLightState {
  GRADING_TRAFFICLIGHT_RUNNING = 0,
  GRADING_TRAFFICLIGHT_JUMPREDLIGHT = 1,
  GradingTrafficLightState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingTrafficLightState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingTrafficLightState_IsValid(int value);
const GradingTrafficLightState GradingTrafficLightState_MIN = GRADING_TRAFFICLIGHT_RUNNING;
const GradingTrafficLightState GradingTrafficLightState_MAX = GRADING_TRAFFICLIGHT_JUMPREDLIGHT;
const int GradingTrafficLightState_ARRAYSIZE = GradingTrafficLightState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingTrafficLightState_descriptor();
inline const ::std::string& GradingTrafficLightState_Name(GradingTrafficLightState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingTrafficLightState_descriptor(), value);
}
inline bool GradingTrafficLightState_Parse(
    const ::std::string& name, GradingTrafficLightState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingTrafficLightState>(
    GradingTrafficLightState_descriptor(), name, value);
}
enum GradingSpeedState {
  GRADING_SPEED_NORMAL = 0,
  GRADING_SPEED_OVERHIGH = 1,
  GRADING_SPEED_OVERLOW = 2,
  GradingSpeedState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingSpeedState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingSpeedState_IsValid(int value);
const GradingSpeedState GradingSpeedState_MIN = GRADING_SPEED_NORMAL;
const GradingSpeedState GradingSpeedState_MAX = GRADING_SPEED_OVERLOW;
const int GradingSpeedState_ARRAYSIZE = GradingSpeedState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingSpeedState_descriptor();
inline const ::std::string& GradingSpeedState_Name(GradingSpeedState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingSpeedState_descriptor(), value);
}
inline bool GradingSpeedState_Parse(
    const ::std::string& name, GradingSpeedState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingSpeedState>(
    GradingSpeedState_descriptor(), name, value);
}
enum GradingAccelerationState {
  GRADING_ACCELERATION_NORMAL = 0,
  GRADING_ACCELERATION_RAPIDACCELERATE = 1,
  GRADING_ACCELERATION_RAPIDDEACCELERATE = 2,
  GradingAccelerationState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingAccelerationState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingAccelerationState_IsValid(int value);
const GradingAccelerationState GradingAccelerationState_MIN = GRADING_ACCELERATION_NORMAL;
const GradingAccelerationState GradingAccelerationState_MAX = GRADING_ACCELERATION_RAPIDDEACCELERATE;
const int GradingAccelerationState_ARRAYSIZE = GradingAccelerationState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingAccelerationState_descriptor();
inline const ::std::string& GradingAccelerationState_Name(GradingAccelerationState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingAccelerationState_descriptor(), value);
}
inline bool GradingAccelerationState_Parse(
    const ::std::string& name, GradingAccelerationState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingAccelerationState>(
    GradingAccelerationState_descriptor(), name, value);
}
enum GradingTimeHeadwayState {
  GRADING_TIMEHEADWAY_NORMAL = 0,
  GRADING_TIMEHEADWAY_OVERLOW = 1,
  GradingTimeHeadwayState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingTimeHeadwayState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingTimeHeadwayState_IsValid(int value);
const GradingTimeHeadwayState GradingTimeHeadwayState_MIN = GRADING_TIMEHEADWAY_NORMAL;
const GradingTimeHeadwayState GradingTimeHeadwayState_MAX = GRADING_TIMEHEADWAY_OVERLOW;
const int GradingTimeHeadwayState_ARRAYSIZE = GradingTimeHeadwayState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingTimeHeadwayState_descriptor();
inline const ::std::string& GradingTimeHeadwayState_Name(GradingTimeHeadwayState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingTimeHeadwayState_descriptor(), value);
}
inline bool GradingTimeHeadwayState_Parse(
    const ::std::string& name, GradingTimeHeadwayState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingTimeHeadwayState>(
    GradingTimeHeadwayState_descriptor(), name, value);
}
enum GradingDistHeadwayState {
  GRADING_DISTHEADWAY_NORMAL = 0,
  GRADING_DISTHEADWAY_OVERLOW = 1,
  GradingDistHeadwayState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingDistHeadwayState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingDistHeadwayState_IsValid(int value);
const GradingDistHeadwayState GradingDistHeadwayState_MIN = GRADING_DISTHEADWAY_NORMAL;
const GradingDistHeadwayState GradingDistHeadwayState_MAX = GRADING_DISTHEADWAY_OVERLOW;
const int GradingDistHeadwayState_ARRAYSIZE = GradingDistHeadwayState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingDistHeadwayState_descriptor();
inline const ::std::string& GradingDistHeadwayState_Name(GradingDistHeadwayState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingDistHeadwayState_descriptor(), value);
}
inline bool GradingDistHeadwayState_Parse(
    const ::std::string& name, GradingDistHeadwayState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingDistHeadwayState>(
    GradingDistHeadwayState_descriptor(), name, value);
}
enum GradingPosErrorState {
  GRADING_PosError_NORMAL = 0,
  GRADING_PosError_EXCEED = 1,
  GradingPosErrorState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GradingPosErrorState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GradingPosErrorState_IsValid(int value);
const GradingPosErrorState GradingPosErrorState_MIN = GRADING_PosError_NORMAL;
const GradingPosErrorState GradingPosErrorState_MAX = GRADING_PosError_EXCEED;
const int GradingPosErrorState_ARRAYSIZE = GradingPosErrorState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GradingPosErrorState_descriptor();
inline const ::std::string& GradingPosErrorState_Name(GradingPosErrorState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GradingPosErrorState_descriptor(), value);
}
inline bool GradingPosErrorState_Parse(
    const ::std::string& name, GradingPosErrorState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GradingPosErrorState>(
    GradingPosErrorState_descriptor(), name, value);
}
// ===================================================================

class Grading_TimeStamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.TimeStamp) */ {
 public:
  Grading_TimeStamp();
  virtual ~Grading_TimeStamp();

  Grading_TimeStamp(const Grading_TimeStamp& from);

  inline Grading_TimeStamp& operator=(const Grading_TimeStamp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_TimeStamp& default_instance();

  static inline const Grading_TimeStamp* internal_default_instance() {
    return reinterpret_cast<const Grading_TimeStamp*>(
               &_Grading_TimeStamp_default_instance_);
  }

  void Swap(Grading_TimeStamp* other);

  // implements Message ----------------------------------------------

  inline Grading_TimeStamp* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_TimeStamp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_TimeStamp& from);
  void MergeFrom(const Grading_TimeStamp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_TimeStamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 timeStamp = 1;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.TimeStamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 timestamp_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Speed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Speed) */ {
 public:
  Grading_Speed();
  virtual ~Grading_Speed();

  Grading_Speed(const Grading_Speed& from);

  inline Grading_Speed& operator=(const Grading_Speed& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Speed& default_instance();

  static inline const Grading_Speed* internal_default_instance() {
    return reinterpret_cast<const Grading_Speed*>(
               &_Grading_Speed_default_instance_);
  }

  void Swap(Grading_Speed* other);

  // implements Message ----------------------------------------------

  inline Grading_Speed* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Speed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Speed& from);
  void MergeFrom(const Grading_Speed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Speed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double speed = 1;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  double speed() const;
  void set_speed(double value);

  // double threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  double threshold() const;
  void set_threshold(double value);

  // .sim_msg.GradingSpeedState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::sim_msg::GradingSpeedState state() const;
  void set_state(::sim_msg::GradingSpeedState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Speed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double speed_;
  double threshold_;
  int state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Acceleration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Acceleration) */ {
 public:
  Grading_Acceleration();
  virtual ~Grading_Acceleration();

  Grading_Acceleration(const Grading_Acceleration& from);

  inline Grading_Acceleration& operator=(const Grading_Acceleration& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Acceleration& default_instance();

  static inline const Grading_Acceleration* internal_default_instance() {
    return reinterpret_cast<const Grading_Acceleration*>(
               &_Grading_Acceleration_default_instance_);
  }

  void Swap(Grading_Acceleration* other);

  // implements Message ----------------------------------------------

  inline Grading_Acceleration* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Acceleration* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Acceleration& from);
  void MergeFrom(const Grading_Acceleration& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Acceleration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double acceleration = 1;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 1;
  double acceleration() const;
  void set_acceleration(double value);

  // double threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  double threshold() const;
  void set_threshold(double value);

  // .sim_msg.GradingAccelerationState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::sim_msg::GradingAccelerationState state() const;
  void set_state(::sim_msg::GradingAccelerationState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Acceleration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double acceleration_;
  double threshold_;
  int state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Collision : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Collision) */ {
 public:
  Grading_Collision();
  virtual ~Grading_Collision();

  Grading_Collision(const Grading_Collision& from);

  inline Grading_Collision& operator=(const Grading_Collision& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Collision& default_instance();

  static inline const Grading_Collision* internal_default_instance() {
    return reinterpret_cast<const Grading_Collision*>(
               &_Grading_Collision_default_instance_);
  }

  void Swap(Grading_Collision* other);

  // implements Message ----------------------------------------------

  inline Grading_Collision* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Collision* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Collision& from);
  void MergeFrom(const Grading_Collision& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Collision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sim_msg.Vec3 location = 2;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 2;
  const ::sim_msg::Vec3& location() const;
  ::sim_msg::Vec3* mutable_location();
  ::sim_msg::Vec3* release_location();
  void set_allocated_location(::sim_msg::Vec3* location);

  // .sim_msg.GradingCollisionState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::sim_msg::GradingCollisionState state() const;
  void set_state(::sim_msg::GradingCollisionState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Collision)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::sim_msg::Vec3* location_;
  int state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_TimeHeadway : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.TimeHeadway) */ {
 public:
  Grading_TimeHeadway();
  virtual ~Grading_TimeHeadway();

  Grading_TimeHeadway(const Grading_TimeHeadway& from);

  inline Grading_TimeHeadway& operator=(const Grading_TimeHeadway& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_TimeHeadway& default_instance();

  static inline const Grading_TimeHeadway* internal_default_instance() {
    return reinterpret_cast<const Grading_TimeHeadway*>(
               &_Grading_TimeHeadway_default_instance_);
  }

  void Swap(Grading_TimeHeadway* other);

  // implements Message ----------------------------------------------

  inline Grading_TimeHeadway* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_TimeHeadway* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_TimeHeadway& from);
  void MergeFrom(const Grading_TimeHeadway& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_TimeHeadway* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float ATH = 1;
  void clear_ath();
  static const int kATHFieldNumber = 1;
  float ath() const;
  void set_ath(float value);

  // .sim_msg.GradingTimeHeadwayState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::sim_msg::GradingTimeHeadwayState state() const;
  void set_state(::sim_msg::GradingTimeHeadwayState value);

  // double threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  double threshold() const;
  void set_threshold(double value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.TimeHeadway)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float ath_;
  int state_;
  double threshold_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_DistHeadway : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.DistHeadway) */ {
 public:
  Grading_DistHeadway();
  virtual ~Grading_DistHeadway();

  Grading_DistHeadway(const Grading_DistHeadway& from);

  inline Grading_DistHeadway& operator=(const Grading_DistHeadway& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_DistHeadway& default_instance();

  static inline const Grading_DistHeadway* internal_default_instance() {
    return reinterpret_cast<const Grading_DistHeadway*>(
               &_Grading_DistHeadway_default_instance_);
  }

  void Swap(Grading_DistHeadway* other);

  // implements Message ----------------------------------------------

  inline Grading_DistHeadway* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_DistHeadway* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_DistHeadway& from);
  void MergeFrom(const Grading_DistHeadway& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_DistHeadway* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double dist_to_fellow = 1;
  void clear_dist_to_fellow();
  static const int kDistToFellowFieldNumber = 1;
  double dist_to_fellow() const;
  void set_dist_to_fellow(double value);

  // double threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  double threshold() const;
  void set_threshold(double value);

  // .sim_msg.GradingDistHeadwayState dist_state = 2;
  void clear_dist_state();
  static const int kDistStateFieldNumber = 2;
  ::sim_msg::GradingDistHeadwayState dist_state() const;
  void set_dist_state(::sim_msg::GradingDistHeadwayState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.DistHeadway)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double dist_to_fellow_;
  double threshold_;
  int dist_state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Algorithm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Algorithm) */ {
 public:
  Grading_Algorithm();
  virtual ~Grading_Algorithm();

  Grading_Algorithm(const Grading_Algorithm& from);

  inline Grading_Algorithm& operator=(const Grading_Algorithm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Algorithm& default_instance();

  static inline const Grading_Algorithm* internal_default_instance() {
    return reinterpret_cast<const Grading_Algorithm*>(
               &_Grading_Algorithm_default_instance_);
  }

  void Swap(Grading_Algorithm* other);

  // implements Message ----------------------------------------------

  inline Grading_Algorithm* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Algorithm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Algorithm& from);
  void MergeFrom(const Grading_Algorithm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Algorithm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sim_msg.GradingAlgorithmState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::sim_msg::GradingAlgorithmState state() const;
  void set_state(::sim_msg::GradingAlgorithmState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Algorithm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Lane : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Lane) */ {
 public:
  Grading_Lane();
  virtual ~Grading_Lane();

  Grading_Lane(const Grading_Lane& from);

  inline Grading_Lane& operator=(const Grading_Lane& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Lane& default_instance();

  static inline const Grading_Lane* internal_default_instance() {
    return reinterpret_cast<const Grading_Lane*>(
               &_Grading_Lane_default_instance_);
  }

  void Swap(Grading_Lane* other);

  // implements Message ----------------------------------------------

  inline Grading_Lane* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Lane* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Lane& from);
  void MergeFrom(const Grading_Lane& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Lane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool isOnSolidLine = 1;
  void clear_isonsolidline();
  static const int kIsOnSolidLineFieldNumber = 1;
  bool isonsolidline() const;
  void set_isonsolidline(bool value);

  // bool isOnDottedLine = 2;
  void clear_isondottedline();
  static const int kIsOnDottedLineFieldNumber = 2;
  bool isondottedline() const;
  void set_isondottedline(bool value);

  // bool isOnStopLine = 3;
  void clear_isonstopline();
  static const int kIsOnStopLineFieldNumber = 3;
  bool isonstopline() const;
  void set_isonstopline(bool value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Lane)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool isonsolidline_;
  bool isondottedline_;
  bool isonstopline_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_TrafficLight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.TrafficLight) */ {
 public:
  Grading_TrafficLight();
  virtual ~Grading_TrafficLight();

  Grading_TrafficLight(const Grading_TrafficLight& from);

  inline Grading_TrafficLight& operator=(const Grading_TrafficLight& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_TrafficLight& default_instance();

  static inline const Grading_TrafficLight* internal_default_instance() {
    return reinterpret_cast<const Grading_TrafficLight*>(
               &_Grading_TrafficLight_default_instance_);
  }

  void Swap(Grading_TrafficLight* other);

  // implements Message ----------------------------------------------

  inline Grading_TrafficLight* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_TrafficLight* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_TrafficLight& from);
  void MergeFrom(const Grading_TrafficLight& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_TrafficLight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sim_msg.GradingTrafficLightState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::sim_msg::GradingTrafficLightState state() const;
  void set_state(::sim_msg::GradingTrafficLightState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.TrafficLight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Control : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Control) */ {
 public:
  Grading_Control();
  virtual ~Grading_Control();

  Grading_Control(const Grading_Control& from);

  inline Grading_Control& operator=(const Grading_Control& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Control& default_instance();

  static inline const Grading_Control* internal_default_instance() {
    return reinterpret_cast<const Grading_Control*>(
               &_Grading_Control_default_instance_);
  }

  void Swap(Grading_Control* other);

  // implements Message ----------------------------------------------

  inline Grading_Control* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Control* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Control& from);
  void MergeFrom(const Grading_Control& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Control* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double posError_H = 1;
  void clear_poserror_h();
  static const int kPosErrorHFieldNumber = 1;
  double poserror_h() const;
  void set_poserror_h(double value);

  // double threshold = 3;
  void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  double threshold() const;
  void set_threshold(double value);

  // .sim_msg.GradingPosErrorState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::sim_msg::GradingPosErrorState state() const;
  void set_state(::sim_msg::GradingPosErrorState value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Control)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double poserror_h_;
  double threshold_;
  int state_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Planning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Planning) */ {
 public:
  Grading_Planning();
  virtual ~Grading_Planning();

  Grading_Planning(const Grading_Planning& from);

  inline Grading_Planning& operator=(const Grading_Planning& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Planning& default_instance();

  static inline const Grading_Planning* internal_default_instance() {
    return reinterpret_cast<const Grading_Planning*>(
               &_Grading_Planning_default_instance_);
  }

  void Swap(Grading_Planning* other);

  // implements Message ----------------------------------------------

  inline Grading_Planning* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Planning* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Planning& from);
  void MergeFrom(const Grading_Planning& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Planning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sim_msg.Vec3 current_point = 2;
  bool has_current_point() const;
  void clear_current_point();
  static const int kCurrentPointFieldNumber = 2;
  const ::sim_msg::Vec3& current_point() const;
  ::sim_msg::Vec3* mutable_current_point();
  ::sim_msg::Vec3* release_current_point();
  void set_allocated_current_point(::sim_msg::Vec3* current_point);

  // .sim_msg.Vec3 endpoint = 3;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 3;
  const ::sim_msg::Vec3& endpoint() const;
  ::sim_msg::Vec3* mutable_endpoint();
  ::sim_msg::Vec3* release_endpoint();
  void set_allocated_endpoint(::sim_msg::Vec3* endpoint);

  // bool is_reachEndpoint = 1;
  void clear_is_reachendpoint();
  static const int kIsReachEndpointFieldNumber = 1;
  bool is_reachendpoint() const;
  void set_is_reachendpoint(bool value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Planning)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::sim_msg::Vec3* current_point_;
  ::sim_msg::Vec3* endpoint_;
  bool is_reachendpoint_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_CarExpData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.CarExpData) */ {
 public:
  Grading_CarExpData();
  virtual ~Grading_CarExpData();

  Grading_CarExpData(const Grading_CarExpData& from);

  inline Grading_CarExpData& operator=(const Grading_CarExpData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_CarExpData& default_instance();

  static inline const Grading_CarExpData* internal_default_instance() {
    return reinterpret_cast<const Grading_CarExpData*>(
               &_Grading_CarExpData_default_instance_);
  }

  void Swap(Grading_CarExpData* other);

  // implements Message ----------------------------------------------

  inline Grading_CarExpData* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_CarExpData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_CarExpData& from);
  void MergeFrom(const Grading_CarExpData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_CarExpData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  double id() const;
  void set_id(double value);

  // double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.CarExpData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double id_;
  double value_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_ExpData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.ExpData) */ {
 public:
  Grading_ExpData();
  virtual ~Grading_ExpData();

  Grading_ExpData(const Grading_ExpData& from);

  inline Grading_ExpData& operator=(const Grading_ExpData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_ExpData& default_instance();

  static inline const Grading_ExpData* internal_default_instance() {
    return reinterpret_cast<const Grading_ExpData*>(
               &_Grading_ExpData_default_instance_);
  }

  void Swap(Grading_ExpData* other);

  // implements Message ----------------------------------------------

  inline Grading_ExpData* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_ExpData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_ExpData& from);
  void MergeFrom(const Grading_ExpData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_ExpData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sim_msg.Grading.CarExpData distFromCar = 1;
  int distfromcar_size() const;
  void clear_distfromcar();
  static const int kDistFromCarFieldNumber = 1;
  const ::sim_msg::Grading_CarExpData& distfromcar(int index) const;
  ::sim_msg::Grading_CarExpData* mutable_distfromcar(int index);
  ::sim_msg::Grading_CarExpData* add_distfromcar();
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
      mutable_distfromcar();
  const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
      distfromcar() const;

  // repeated .sim_msg.Grading.CarExpData distFromCar_H = 2;
  int distfromcar_h_size() const;
  void clear_distfromcar_h();
  static const int kDistFromCarHFieldNumber = 2;
  const ::sim_msg::Grading_CarExpData& distfromcar_h(int index) const;
  ::sim_msg::Grading_CarExpData* mutable_distfromcar_h(int index);
  ::sim_msg::Grading_CarExpData* add_distfromcar_h();
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
      mutable_distfromcar_h();
  const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
      distfromcar_h() const;

  // repeated .sim_msg.Grading.CarExpData distFromCar_V = 3;
  int distfromcar_v_size() const;
  void clear_distfromcar_v();
  static const int kDistFromCarVFieldNumber = 3;
  const ::sim_msg::Grading_CarExpData& distfromcar_v(int index) const;
  ::sim_msg::Grading_CarExpData* mutable_distfromcar_v(int index);
  ::sim_msg::Grading_CarExpData* add_distfromcar_v();
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
      mutable_distfromcar_v();
  const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
      distfromcar_v() const;

  // repeated .sim_msg.Grading.CarExpData thFromCar = 4;
  int thfromcar_size() const;
  void clear_thfromcar();
  static const int kThFromCarFieldNumber = 4;
  const ::sim_msg::Grading_CarExpData& thfromcar(int index) const;
  ::sim_msg::Grading_CarExpData* mutable_thfromcar(int index);
  ::sim_msg::Grading_CarExpData* add_thfromcar();
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
      mutable_thfromcar();
  const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
      thfromcar() const;

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.ExpData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData > distfromcar_;
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData > distfromcar_h_;
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData > distfromcar_v_;
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData > thfromcar_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Statistics_DetailItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Statistics.DetailItem) */ {
 public:
  Grading_Statistics_DetailItem();
  virtual ~Grading_Statistics_DetailItem();

  Grading_Statistics_DetailItem(const Grading_Statistics_DetailItem& from);

  inline Grading_Statistics_DetailItem& operator=(const Grading_Statistics_DetailItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Statistics_DetailItem& default_instance();

  static inline const Grading_Statistics_DetailItem* internal_default_instance() {
    return reinterpret_cast<const Grading_Statistics_DetailItem*>(
               &_Grading_Statistics_DetailItem_default_instance_);
  }

  void Swap(Grading_Statistics_DetailItem* other);

  // implements Message ----------------------------------------------

  inline Grading_Statistics_DetailItem* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Statistics_DetailItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Statistics_DetailItem& from);
  void MergeFrom(const Grading_Statistics_DetailItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Statistics_DetailItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double eval_value = 1;
  void clear_eval_value();
  static const int kEvalValueFieldNumber = 1;
  double eval_value() const;
  void set_eval_value(double value);

  // bool is_enabled = 2;
  void clear_is_enabled();
  static const int kIsEnabledFieldNumber = 2;
  bool is_enabled() const;
  void set_is_enabled(bool value);

  // bool is_pass = 3;
  void clear_is_pass();
  static const int kIsPassFieldNumber = 3;
  bool is_pass() const;
  void set_is_pass(bool value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Statistics.DetailItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double eval_value_;
  bool is_enabled_;
  bool is_pass_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Statistics_Detail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Statistics.Detail) */ {
 public:
  Grading_Statistics_Detail();
  virtual ~Grading_Statistics_Detail();

  Grading_Statistics_Detail(const Grading_Statistics_Detail& from);

  inline Grading_Statistics_Detail& operator=(const Grading_Statistics_Detail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Statistics_Detail& default_instance();

  static inline const Grading_Statistics_Detail* internal_default_instance() {
    return reinterpret_cast<const Grading_Statistics_Detail*>(
               &_Grading_Statistics_Detail_default_instance_);
  }

  void Swap(Grading_Statistics_Detail* other);

  // implements Message ----------------------------------------------

  inline Grading_Statistics_Detail* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Statistics_Detail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Statistics_Detail& from);
  void MergeFrom(const Grading_Statistics_Detail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Statistics_Detail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sim_msg.Grading.Statistics.DetailItem count_overSpeed = 1;
  bool has_count_overspeed() const;
  void clear_count_overspeed();
  static const int kCountOverSpeedFieldNumber = 1;
  const ::sim_msg::Grading_Statistics_DetailItem& count_overspeed() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_overspeed();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_overspeed();
  void set_allocated_count_overspeed(::sim_msg::Grading_Statistics_DetailItem* count_overspeed);

  // .sim_msg.Grading.Statistics.DetailItem count_overAcceleration = 2;
  bool has_count_overacceleration() const;
  void clear_count_overacceleration();
  static const int kCountOverAccelerationFieldNumber = 2;
  const ::sim_msg::Grading_Statistics_DetailItem& count_overacceleration() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_overacceleration();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_overacceleration();
  void set_allocated_count_overacceleration(::sim_msg::Grading_Statistics_DetailItem* count_overacceleration);

  // .sim_msg.Grading.Statistics.DetailItem count_overDecelleration = 3;
  bool has_count_overdecelleration() const;
  void clear_count_overdecelleration();
  static const int kCountOverDecellerationFieldNumber = 3;
  const ::sim_msg::Grading_Statistics_DetailItem& count_overdecelleration() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_overdecelleration();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_overdecelleration();
  void set_allocated_count_overdecelleration(::sim_msg::Grading_Statistics_DetailItem* count_overdecelleration);

  // .sim_msg.Grading.Statistics.DetailItem count_overTurningAcceleration = 4;
  bool has_count_overturningacceleration() const;
  void clear_count_overturningacceleration();
  static const int kCountOverTurningAccelerationFieldNumber = 4;
  const ::sim_msg::Grading_Statistics_DetailItem& count_overturningacceleration() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_overturningacceleration();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_overturningacceleration();
  void set_allocated_count_overturningacceleration(::sim_msg::Grading_Statistics_DetailItem* count_overturningacceleration);

  // .sim_msg.Grading.Statistics.DetailItem count_tooCloseTTC = 5;
  bool has_count_tooclosettc() const;
  void clear_count_tooclosettc();
  static const int kCountTooCloseTTCFieldNumber = 5;
  const ::sim_msg::Grading_Statistics_DetailItem& count_tooclosettc() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_tooclosettc();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_tooclosettc();
  void set_allocated_count_tooclosettc(::sim_msg::Grading_Statistics_DetailItem* count_tooclosettc);

  // .sim_msg.Grading.Statistics.DetailItem count_tooCloseDistance = 6;
  bool has_count_tooclosedistance() const;
  void clear_count_tooclosedistance();
  static const int kCountTooCloseDistanceFieldNumber = 6;
  const ::sim_msg::Grading_Statistics_DetailItem& count_tooclosedistance() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_tooclosedistance();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_tooclosedistance();
  void set_allocated_count_tooclosedistance(::sim_msg::Grading_Statistics_DetailItem* count_tooclosedistance);

  // .sim_msg.Grading.Statistics.DetailItem count_overMaxPosError_H = 7;
  bool has_count_overmaxposerror_h() const;
  void clear_count_overmaxposerror_h();
  static const int kCountOverMaxPosErrorHFieldNumber = 7;
  const ::sim_msg::Grading_Statistics_DetailItem& count_overmaxposerror_h() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_overmaxposerror_h();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_overmaxposerror_h();
  void set_allocated_count_overmaxposerror_h(::sim_msg::Grading_Statistics_DetailItem* count_overmaxposerror_h);

  // .sim_msg.Grading.Statistics.DetailItem average_PosError_H = 8;
  bool has_average_poserror_h() const;
  void clear_average_poserror_h();
  static const int kAveragePosErrorHFieldNumber = 8;
  const ::sim_msg::Grading_Statistics_DetailItem& average_poserror_h() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_average_poserror_h();
  ::sim_msg::Grading_Statistics_DetailItem* release_average_poserror_h();
  void set_allocated_average_poserror_h(::sim_msg::Grading_Statistics_DetailItem* average_poserror_h);

  // .sim_msg.Grading.Statistics.DetailItem max_PosError_H = 9;
  bool has_max_poserror_h() const;
  void clear_max_poserror_h();
  static const int kMaxPosErrorHFieldNumber = 9;
  const ::sim_msg::Grading_Statistics_DetailItem& max_poserror_h() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_max_poserror_h();
  ::sim_msg::Grading_Statistics_DetailItem* release_max_poserror_h();
  void set_allocated_max_poserror_h(::sim_msg::Grading_Statistics_DetailItem* max_poserror_h);

  // .sim_msg.Grading.Statistics.DetailItem max_PosError_H_L = 10;
  bool has_max_poserror_h_l() const;
  void clear_max_poserror_h_l();
  static const int kMaxPosErrorHLFieldNumber = 10;
  const ::sim_msg::Grading_Statistics_DetailItem& max_poserror_h_l() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_max_poserror_h_l();
  ::sim_msg::Grading_Statistics_DetailItem* release_max_poserror_h_l();
  void set_allocated_max_poserror_h_l(::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_l);

  // .sim_msg.Grading.Statistics.DetailItem max_PosError_H_R = 11;
  bool has_max_poserror_h_r() const;
  void clear_max_poserror_h_r();
  static const int kMaxPosErrorHRFieldNumber = 11;
  const ::sim_msg::Grading_Statistics_DetailItem& max_poserror_h_r() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_max_poserror_h_r();
  ::sim_msg::Grading_Statistics_DetailItem* release_max_poserror_h_r();
  void set_allocated_max_poserror_h_r(::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_r);

  // .sim_msg.Grading.Statistics.DetailItem count_CrossSolidLine = 12;
  bool has_count_crosssolidline() const;
  void clear_count_crosssolidline();
  static const int kCountCrossSolidLineFieldNumber = 12;
  const ::sim_msg::Grading_Statistics_DetailItem& count_crosssolidline() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_crosssolidline();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_crosssolidline();
  void set_allocated_count_crosssolidline(::sim_msg::Grading_Statistics_DetailItem* count_crosssolidline);

  // .sim_msg.Grading.Statistics.DetailItem count_RanRedLight = 13;
  bool has_count_ranredlight() const;
  void clear_count_ranredlight();
  static const int kCountRanRedLightFieldNumber = 13;
  const ::sim_msg::Grading_Statistics_DetailItem& count_ranredlight() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_count_ranredlight();
  ::sim_msg::Grading_Statistics_DetailItem* release_count_ranredlight();
  void set_allocated_count_ranredlight(::sim_msg::Grading_Statistics_DetailItem* count_ranredlight);

  // .sim_msg.Grading.Statistics.DetailItem reachEndPoint = 14;
  bool has_reachendpoint() const;
  void clear_reachendpoint();
  static const int kReachEndPointFieldNumber = 14;
  const ::sim_msg::Grading_Statistics_DetailItem& reachendpoint() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_reachendpoint();
  ::sim_msg::Grading_Statistics_DetailItem* release_reachendpoint();
  void set_allocated_reachendpoint(::sim_msg::Grading_Statistics_DetailItem* reachendpoint);

  // .sim_msg.Grading.Statistics.DetailItem collision = 15;
  bool has_collision() const;
  void clear_collision();
  static const int kCollisionFieldNumber = 15;
  const ::sim_msg::Grading_Statistics_DetailItem& collision() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_collision();
  ::sim_msg::Grading_Statistics_DetailItem* release_collision();
  void set_allocated_collision(::sim_msg::Grading_Statistics_DetailItem* collision);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Statistics.Detail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::sim_msg::Grading_Statistics_DetailItem* count_overspeed_;
  ::sim_msg::Grading_Statistics_DetailItem* count_overacceleration_;
  ::sim_msg::Grading_Statistics_DetailItem* count_overdecelleration_;
  ::sim_msg::Grading_Statistics_DetailItem* count_overturningacceleration_;
  ::sim_msg::Grading_Statistics_DetailItem* count_tooclosettc_;
  ::sim_msg::Grading_Statistics_DetailItem* count_tooclosedistance_;
  ::sim_msg::Grading_Statistics_DetailItem* count_overmaxposerror_h_;
  ::sim_msg::Grading_Statistics_DetailItem* average_poserror_h_;
  ::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_;
  ::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_l_;
  ::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_r_;
  ::sim_msg::Grading_Statistics_DetailItem* count_crosssolidline_;
  ::sim_msg::Grading_Statistics_DetailItem* count_ranredlight_;
  ::sim_msg::Grading_Statistics_DetailItem* reachendpoint_;
  ::sim_msg::Grading_Statistics_DetailItem* collision_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Statistics_CustomDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Statistics.CustomDetail) */ {
 public:
  Grading_Statistics_CustomDetail();
  virtual ~Grading_Statistics_CustomDetail();

  Grading_Statistics_CustomDetail(const Grading_Statistics_CustomDetail& from);

  inline Grading_Statistics_CustomDetail& operator=(const Grading_Statistics_CustomDetail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Statistics_CustomDetail& default_instance();

  static inline const Grading_Statistics_CustomDetail* internal_default_instance() {
    return reinterpret_cast<const Grading_Statistics_CustomDetail*>(
               &_Grading_Statistics_CustomDetail_default_instance_);
  }

  void Swap(Grading_Statistics_CustomDetail* other);

  // implements Message ----------------------------------------------

  inline Grading_Statistics_CustomDetail* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Statistics_CustomDetail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Statistics_CustomDetail& from);
  void MergeFrom(const Grading_Statistics_CustomDetail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Statistics_CustomDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .sim_msg.Grading.Statistics.DetailItem custom_ReachEndPoint = 1;
  bool has_custom_reachendpoint() const;
  void clear_custom_reachendpoint();
  static const int kCustomReachEndPointFieldNumber = 1;
  const ::sim_msg::Grading_Statistics_DetailItem& custom_reachendpoint() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_custom_reachendpoint();
  ::sim_msg::Grading_Statistics_DetailItem* release_custom_reachendpoint();
  void set_allocated_custom_reachendpoint(::sim_msg::Grading_Statistics_DetailItem* custom_reachendpoint);

  // .sim_msg.Grading.Statistics.DetailItem custom_maxPosError_Exceed = 2;
  bool has_custom_maxposerror_exceed() const;
  void clear_custom_maxposerror_exceed();
  static const int kCustomMaxPosErrorExceedFieldNumber = 2;
  const ::sim_msg::Grading_Statistics_DetailItem& custom_maxposerror_exceed() const;
  ::sim_msg::Grading_Statistics_DetailItem* mutable_custom_maxposerror_exceed();
  ::sim_msg::Grading_Statistics_DetailItem* release_custom_maxposerror_exceed();
  void set_allocated_custom_maxposerror_exceed(::sim_msg::Grading_Statistics_DetailItem* custom_maxposerror_exceed);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Statistics.CustomDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::sim_msg::Grading_Statistics_DetailItem* custom_reachendpoint_;
  ::sim_msg::Grading_Statistics_DetailItem* custom_maxposerror_exceed_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading_Statistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading.Statistics) */ {
 public:
  Grading_Statistics();
  virtual ~Grading_Statistics();

  Grading_Statistics(const Grading_Statistics& from);

  inline Grading_Statistics& operator=(const Grading_Statistics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading_Statistics& default_instance();

  static inline const Grading_Statistics* internal_default_instance() {
    return reinterpret_cast<const Grading_Statistics*>(
               &_Grading_Statistics_default_instance_);
  }

  void Swap(Grading_Statistics* other);

  // implements Message ----------------------------------------------

  inline Grading_Statistics* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading_Statistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading_Statistics& from);
  void MergeFrom(const Grading_Statistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading_Statistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Grading_Statistics_DetailItem DetailItem;
  typedef Grading_Statistics_Detail Detail;
  typedef Grading_Statistics_CustomDetail CustomDetail;

  // accessors -------------------------------------------------------

  // string scene_name = 1;
  void clear_scene_name();
  static const int kSceneNameFieldNumber = 1;
  const ::std::string& scene_name() const;
  void set_scene_name(const ::std::string& value);
  #if LANG_CXX11
  void set_scene_name(::std::string&& value);
  #endif
  void set_scene_name(const char* value);
  void set_scene_name(const char* value, size_t size);
  ::std::string* mutable_scene_name();
  ::std::string* release_scene_name();
  void set_allocated_scene_name(::std::string* scene_name);

  // string report_date = 2;
  void clear_report_date();
  static const int kReportDateFieldNumber = 2;
  const ::std::string& report_date() const;
  void set_report_date(const ::std::string& value);
  #if LANG_CXX11
  void set_report_date(::std::string&& value);
  #endif
  void set_report_date(const char* value);
  void set_report_date(const char* value, size_t size);
  ::std::string* mutable_report_date();
  ::std::string* release_report_date();
  void set_allocated_report_date(::std::string* report_date);

  // string grading_xml = 7;
  void clear_grading_xml();
  static const int kGradingXmlFieldNumber = 7;
  const ::std::string& grading_xml() const;
  void set_grading_xml(const ::std::string& value);
  #if LANG_CXX11
  void set_grading_xml(::std::string&& value);
  #endif
  void set_grading_xml(const char* value);
  void set_grading_xml(const char* value, size_t size);
  ::std::string* mutable_grading_xml();
  ::std::string* release_grading_xml();
  void set_allocated_grading_xml(::std::string* grading_xml);

  // string reason = 10;
  void clear_reason();
  static const int kReasonFieldNumber = 10;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // .sim_msg.Grading.Statistics.Detail detail = 8;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 8;
  const ::sim_msg::Grading_Statistics_Detail& detail() const;
  ::sim_msg::Grading_Statistics_Detail* mutable_detail();
  ::sim_msg::Grading_Statistics_Detail* release_detail();
  void set_allocated_detail(::sim_msg::Grading_Statistics_Detail* detail);

  // .sim_msg.Grading.Statistics.CustomDetail custom_detail = 9;
  bool has_custom_detail() const;
  void clear_custom_detail();
  static const int kCustomDetailFieldNumber = 9;
  const ::sim_msg::Grading_Statistics_CustomDetail& custom_detail() const;
  ::sim_msg::Grading_Statistics_CustomDetail* mutable_custom_detail();
  ::sim_msg::Grading_Statistics_CustomDetail* release_custom_detail();
  void set_allocated_custom_detail(::sim_msg::Grading_Statistics_CustomDetail* custom_detail);

  // double total_time = 4;
  void clear_total_time();
  static const int kTotalTimeFieldNumber = 4;
  double total_time() const;
  void set_total_time(double value);

  // double total_milleage = 5;
  void clear_total_milleage();
  static const int kTotalMilleageFieldNumber = 5;
  double total_milleage() const;
  void set_total_milleage(double value);

  // bool is_pass = 3;
  void clear_is_pass();
  static const int kIsPassFieldNumber = 3;
  bool is_pass() const;
  void set_is_pass(bool value);

  // bool is_timeout = 6;
  void clear_is_timeout();
  static const int kIsTimeoutFieldNumber = 6;
  bool is_timeout() const;
  void set_is_timeout(bool value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading.Statistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr scene_name_;
  ::google::protobuf::internal::ArenaStringPtr report_date_;
  ::google::protobuf::internal::ArenaStringPtr grading_xml_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::sim_msg::Grading_Statistics_Detail* detail_;
  ::sim_msg::Grading_Statistics_CustomDetail* custom_detail_;
  double total_time_;
  double total_milleage_;
  bool is_pass_;
  bool is_timeout_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Grading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Grading) */ {
 public:
  Grading();
  virtual ~Grading();

  Grading(const Grading& from);

  inline Grading& operator=(const Grading& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grading& default_instance();

  static inline const Grading* internal_default_instance() {
    return reinterpret_cast<const Grading*>(
               &_Grading_default_instance_);
  }

  void Swap(Grading* other);

  // implements Message ----------------------------------------------

  inline Grading* New() const PROTOBUF_FINAL { return New(NULL); }

  Grading* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Grading& from);
  void MergeFrom(const Grading& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Grading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Grading_TimeStamp TimeStamp;
  typedef Grading_Speed Speed;
  typedef Grading_Acceleration Acceleration;
  typedef Grading_Collision Collision;
  typedef Grading_TimeHeadway TimeHeadway;
  typedef Grading_DistHeadway DistHeadway;
  typedef Grading_Algorithm Algorithm;
  typedef Grading_Lane Lane;
  typedef Grading_TrafficLight TrafficLight;
  typedef Grading_Control Control;
  typedef Grading_Planning Planning;
  typedef Grading_CarExpData CarExpData;
  typedef Grading_ExpData ExpData;
  typedef Grading_Statistics Statistics;

  // accessors -------------------------------------------------------

  // repeated .sim_msg.Grading.Collision collision = 3;
  int collision_size() const;
  void clear_collision();
  static const int kCollisionFieldNumber = 3;
  const ::sim_msg::Grading_Collision& collision(int index) const;
  ::sim_msg::Grading_Collision* mutable_collision(int index);
  ::sim_msg::Grading_Collision* add_collision();
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_Collision >*
      mutable_collision();
  const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_Collision >&
      collision() const;

  // .sim_msg.Grading.Speed speed = 1;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  const ::sim_msg::Grading_Speed& speed() const;
  ::sim_msg::Grading_Speed* mutable_speed();
  ::sim_msg::Grading_Speed* release_speed();
  void set_allocated_speed(::sim_msg::Grading_Speed* speed);

  // .sim_msg.Grading.Acceleration acceleration = 2;
  bool has_acceleration() const;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 2;
  const ::sim_msg::Grading_Acceleration& acceleration() const;
  ::sim_msg::Grading_Acceleration* mutable_acceleration();
  ::sim_msg::Grading_Acceleration* release_acceleration();
  void set_allocated_acceleration(::sim_msg::Grading_Acceleration* acceleration);

  // .sim_msg.Grading.TimeHeadway timeHeadway = 4;
  bool has_timeheadway() const;
  void clear_timeheadway();
  static const int kTimeHeadwayFieldNumber = 4;
  const ::sim_msg::Grading_TimeHeadway& timeheadway() const;
  ::sim_msg::Grading_TimeHeadway* mutable_timeheadway();
  ::sim_msg::Grading_TimeHeadway* release_timeheadway();
  void set_allocated_timeheadway(::sim_msg::Grading_TimeHeadway* timeheadway);

  // .sim_msg.Grading.Algorithm algorithm = 5;
  bool has_algorithm() const;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 5;
  const ::sim_msg::Grading_Algorithm& algorithm() const;
  ::sim_msg::Grading_Algorithm* mutable_algorithm();
  ::sim_msg::Grading_Algorithm* release_algorithm();
  void set_allocated_algorithm(::sim_msg::Grading_Algorithm* algorithm);

  // .sim_msg.Grading.Lane lane = 6;
  bool has_lane() const;
  void clear_lane();
  static const int kLaneFieldNumber = 6;
  const ::sim_msg::Grading_Lane& lane() const;
  ::sim_msg::Grading_Lane* mutable_lane();
  ::sim_msg::Grading_Lane* release_lane();
  void set_allocated_lane(::sim_msg::Grading_Lane* lane);

  // .sim_msg.Grading.TrafficLight trafficeLight = 7;
  bool has_trafficelight() const;
  void clear_trafficelight();
  static const int kTrafficeLightFieldNumber = 7;
  const ::sim_msg::Grading_TrafficLight& trafficelight() const;
  ::sim_msg::Grading_TrafficLight* mutable_trafficelight();
  ::sim_msg::Grading_TrafficLight* release_trafficelight();
  void set_allocated_trafficelight(::sim_msg::Grading_TrafficLight* trafficelight);

  // .sim_msg.Grading.TimeStamp timeStamp = 8;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 8;
  const ::sim_msg::Grading_TimeStamp& timestamp() const;
  ::sim_msg::Grading_TimeStamp* mutable_timestamp();
  ::sim_msg::Grading_TimeStamp* release_timestamp();
  void set_allocated_timestamp(::sim_msg::Grading_TimeStamp* timestamp);

  // .sim_msg.Grading.ExpData expData = 10;
  bool has_expdata() const;
  void clear_expdata();
  static const int kExpDataFieldNumber = 10;
  const ::sim_msg::Grading_ExpData& expdata() const;
  ::sim_msg::Grading_ExpData* mutable_expdata();
  ::sim_msg::Grading_ExpData* release_expdata();
  void set_allocated_expdata(::sim_msg::Grading_ExpData* expdata);

  // .sim_msg.Grading.DistHeadway distHeadway = 11;
  bool has_distheadway() const;
  void clear_distheadway();
  static const int kDistHeadwayFieldNumber = 11;
  const ::sim_msg::Grading_DistHeadway& distheadway() const;
  ::sim_msg::Grading_DistHeadway* mutable_distheadway();
  ::sim_msg::Grading_DistHeadway* release_distheadway();
  void set_allocated_distheadway(::sim_msg::Grading_DistHeadway* distheadway);

  // .sim_msg.Grading.Control control = 12;
  bool has_control() const;
  void clear_control();
  static const int kControlFieldNumber = 12;
  const ::sim_msg::Grading_Control& control() const;
  ::sim_msg::Grading_Control* mutable_control();
  ::sim_msg::Grading_Control* release_control();
  void set_allocated_control(::sim_msg::Grading_Control* control);

  // .sim_msg.Grading.Planning planning = 13;
  bool has_planning() const;
  void clear_planning();
  static const int kPlanningFieldNumber = 13;
  const ::sim_msg::Grading_Planning& planning() const;
  ::sim_msg::Grading_Planning* mutable_planning();
  ::sim_msg::Grading_Planning* release_planning();
  void set_allocated_planning(::sim_msg::Grading_Planning* planning);

  // .sim_msg.Grading.Acceleration lateral_acc = 14;
  bool has_lateral_acc() const;
  void clear_lateral_acc();
  static const int kLateralAccFieldNumber = 14;
  const ::sim_msg::Grading_Acceleration& lateral_acc() const;
  ::sim_msg::Grading_Acceleration* mutable_lateral_acc();
  ::sim_msg::Grading_Acceleration* release_lateral_acc();
  void set_allocated_lateral_acc(::sim_msg::Grading_Acceleration* lateral_acc);

  // .sim_msg.Grading.Acceleration dec_acc = 15;
  bool has_dec_acc() const;
  void clear_dec_acc();
  static const int kDecAccFieldNumber = 15;
  const ::sim_msg::Grading_Acceleration& dec_acc() const;
  ::sim_msg::Grading_Acceleration* mutable_dec_acc();
  ::sim_msg::Grading_Acceleration* release_dec_acc();
  void set_allocated_dec_acc(::sim_msg::Grading_Acceleration* dec_acc);

  // double mileage = 9;
  void clear_mileage();
  static const int kMileageFieldNumber = 9;
  double mileage() const;
  void set_mileage(double value);

  // @@protoc_insertion_point(class_scope:sim_msg.Grading)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_Collision > collision_;
  ::sim_msg::Grading_Speed* speed_;
  ::sim_msg::Grading_Acceleration* acceleration_;
  ::sim_msg::Grading_TimeHeadway* timeheadway_;
  ::sim_msg::Grading_Algorithm* algorithm_;
  ::sim_msg::Grading_Lane* lane_;
  ::sim_msg::Grading_TrafficLight* trafficelight_;
  ::sim_msg::Grading_TimeStamp* timestamp_;
  ::sim_msg::Grading_ExpData* expdata_;
  ::sim_msg::Grading_DistHeadway* distheadway_;
  ::sim_msg::Grading_Control* control_;
  ::sim_msg::Grading_Planning* planning_;
  ::sim_msg::Grading_Acceleration* lateral_acc_;
  ::sim_msg::Grading_Acceleration* dec_acc_;
  double mileage_;
  mutable int _cached_size_;
  friend struct  protobuf_grading_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Grading_TimeStamp

// uint64 timeStamp = 1;
inline void Grading_TimeStamp::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Grading_TimeStamp::timestamp() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.TimeStamp.timeStamp)
  return timestamp_;
}
inline void Grading_TimeStamp::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.TimeStamp.timeStamp)
}

// -------------------------------------------------------------------

// Grading_Speed

// double speed = 1;
inline void Grading_Speed::clear_speed() {
  speed_ = 0;
}
inline double Grading_Speed::speed() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Speed.speed)
  return speed_;
}
inline void Grading_Speed::set_speed(double value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Speed.speed)
}

// .sim_msg.GradingSpeedState state = 2;
inline void Grading_Speed::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingSpeedState Grading_Speed::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Speed.state)
  return static_cast< ::sim_msg::GradingSpeedState >(state_);
}
inline void Grading_Speed::set_state(::sim_msg::GradingSpeedState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Speed.state)
}

// double threshold = 3;
inline void Grading_Speed::clear_threshold() {
  threshold_ = 0;
}
inline double Grading_Speed::threshold() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Speed.threshold)
  return threshold_;
}
inline void Grading_Speed::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Speed.threshold)
}

// -------------------------------------------------------------------

// Grading_Acceleration

// double acceleration = 1;
inline void Grading_Acceleration::clear_acceleration() {
  acceleration_ = 0;
}
inline double Grading_Acceleration::acceleration() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Acceleration.acceleration)
  return acceleration_;
}
inline void Grading_Acceleration::set_acceleration(double value) {
  
  acceleration_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Acceleration.acceleration)
}

// .sim_msg.GradingAccelerationState state = 2;
inline void Grading_Acceleration::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingAccelerationState Grading_Acceleration::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Acceleration.state)
  return static_cast< ::sim_msg::GradingAccelerationState >(state_);
}
inline void Grading_Acceleration::set_state(::sim_msg::GradingAccelerationState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Acceleration.state)
}

// double threshold = 3;
inline void Grading_Acceleration::clear_threshold() {
  threshold_ = 0;
}
inline double Grading_Acceleration::threshold() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Acceleration.threshold)
  return threshold_;
}
inline void Grading_Acceleration::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Acceleration.threshold)
}

// -------------------------------------------------------------------

// Grading_Collision

// .sim_msg.GradingCollisionState state = 1;
inline void Grading_Collision::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingCollisionState Grading_Collision::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Collision.state)
  return static_cast< ::sim_msg::GradingCollisionState >(state_);
}
inline void Grading_Collision::set_state(::sim_msg::GradingCollisionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Collision.state)
}

// .sim_msg.Vec3 location = 2;
inline bool Grading_Collision::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void Grading_Collision::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::sim_msg::Vec3& Grading_Collision::location() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Collision.location)
  return location_ != NULL ? *location_
                         : *::sim_msg::Vec3::internal_default_instance();
}
inline ::sim_msg::Vec3* Grading_Collision::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::sim_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Collision.location)
  return location_;
}
inline ::sim_msg::Vec3* Grading_Collision::release_location() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Collision.location)
  
  ::sim_msg::Vec3* temp = location_;
  location_ = NULL;
  return temp;
}
inline void Grading_Collision::set_allocated_location(::sim_msg::Vec3* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Collision.location)
}

// -------------------------------------------------------------------

// Grading_TimeHeadway

// float ATH = 1;
inline void Grading_TimeHeadway::clear_ath() {
  ath_ = 0;
}
inline float Grading_TimeHeadway::ath() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.TimeHeadway.ATH)
  return ath_;
}
inline void Grading_TimeHeadway::set_ath(float value) {
  
  ath_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.TimeHeadway.ATH)
}

// .sim_msg.GradingTimeHeadwayState state = 2;
inline void Grading_TimeHeadway::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingTimeHeadwayState Grading_TimeHeadway::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.TimeHeadway.state)
  return static_cast< ::sim_msg::GradingTimeHeadwayState >(state_);
}
inline void Grading_TimeHeadway::set_state(::sim_msg::GradingTimeHeadwayState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.TimeHeadway.state)
}

// double threshold = 3;
inline void Grading_TimeHeadway::clear_threshold() {
  threshold_ = 0;
}
inline double Grading_TimeHeadway::threshold() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.TimeHeadway.threshold)
  return threshold_;
}
inline void Grading_TimeHeadway::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.TimeHeadway.threshold)
}

// -------------------------------------------------------------------

// Grading_DistHeadway

// double dist_to_fellow = 1;
inline void Grading_DistHeadway::clear_dist_to_fellow() {
  dist_to_fellow_ = 0;
}
inline double Grading_DistHeadway::dist_to_fellow() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.DistHeadway.dist_to_fellow)
  return dist_to_fellow_;
}
inline void Grading_DistHeadway::set_dist_to_fellow(double value) {
  
  dist_to_fellow_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.DistHeadway.dist_to_fellow)
}

// .sim_msg.GradingDistHeadwayState dist_state = 2;
inline void Grading_DistHeadway::clear_dist_state() {
  dist_state_ = 0;
}
inline ::sim_msg::GradingDistHeadwayState Grading_DistHeadway::dist_state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.DistHeadway.dist_state)
  return static_cast< ::sim_msg::GradingDistHeadwayState >(dist_state_);
}
inline void Grading_DistHeadway::set_dist_state(::sim_msg::GradingDistHeadwayState value) {
  
  dist_state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.DistHeadway.dist_state)
}

// double threshold = 3;
inline void Grading_DistHeadway::clear_threshold() {
  threshold_ = 0;
}
inline double Grading_DistHeadway::threshold() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.DistHeadway.threshold)
  return threshold_;
}
inline void Grading_DistHeadway::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.DistHeadway.threshold)
}

// -------------------------------------------------------------------

// Grading_Algorithm

// .sim_msg.GradingAlgorithmState state = 1;
inline void Grading_Algorithm::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingAlgorithmState Grading_Algorithm::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Algorithm.state)
  return static_cast< ::sim_msg::GradingAlgorithmState >(state_);
}
inline void Grading_Algorithm::set_state(::sim_msg::GradingAlgorithmState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Algorithm.state)
}

// -------------------------------------------------------------------

// Grading_Lane

// bool isOnSolidLine = 1;
inline void Grading_Lane::clear_isonsolidline() {
  isonsolidline_ = false;
}
inline bool Grading_Lane::isonsolidline() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Lane.isOnSolidLine)
  return isonsolidline_;
}
inline void Grading_Lane::set_isonsolidline(bool value) {
  
  isonsolidline_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Lane.isOnSolidLine)
}

// bool isOnDottedLine = 2;
inline void Grading_Lane::clear_isondottedline() {
  isondottedline_ = false;
}
inline bool Grading_Lane::isondottedline() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Lane.isOnDottedLine)
  return isondottedline_;
}
inline void Grading_Lane::set_isondottedline(bool value) {
  
  isondottedline_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Lane.isOnDottedLine)
}

// bool isOnStopLine = 3;
inline void Grading_Lane::clear_isonstopline() {
  isonstopline_ = false;
}
inline bool Grading_Lane::isonstopline() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Lane.isOnStopLine)
  return isonstopline_;
}
inline void Grading_Lane::set_isonstopline(bool value) {
  
  isonstopline_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Lane.isOnStopLine)
}

// -------------------------------------------------------------------

// Grading_TrafficLight

// .sim_msg.GradingTrafficLightState state = 1;
inline void Grading_TrafficLight::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingTrafficLightState Grading_TrafficLight::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.TrafficLight.state)
  return static_cast< ::sim_msg::GradingTrafficLightState >(state_);
}
inline void Grading_TrafficLight::set_state(::sim_msg::GradingTrafficLightState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.TrafficLight.state)
}

// -------------------------------------------------------------------

// Grading_Control

// double posError_H = 1;
inline void Grading_Control::clear_poserror_h() {
  poserror_h_ = 0;
}
inline double Grading_Control::poserror_h() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Control.posError_H)
  return poserror_h_;
}
inline void Grading_Control::set_poserror_h(double value) {
  
  poserror_h_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Control.posError_H)
}

// .sim_msg.GradingPosErrorState state = 2;
inline void Grading_Control::clear_state() {
  state_ = 0;
}
inline ::sim_msg::GradingPosErrorState Grading_Control::state() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Control.state)
  return static_cast< ::sim_msg::GradingPosErrorState >(state_);
}
inline void Grading_Control::set_state(::sim_msg::GradingPosErrorState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Control.state)
}

// double threshold = 3;
inline void Grading_Control::clear_threshold() {
  threshold_ = 0;
}
inline double Grading_Control::threshold() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Control.threshold)
  return threshold_;
}
inline void Grading_Control::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Control.threshold)
}

// -------------------------------------------------------------------

// Grading_Planning

// bool is_reachEndpoint = 1;
inline void Grading_Planning::clear_is_reachendpoint() {
  is_reachendpoint_ = false;
}
inline bool Grading_Planning::is_reachendpoint() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Planning.is_reachEndpoint)
  return is_reachendpoint_;
}
inline void Grading_Planning::set_is_reachendpoint(bool value) {
  
  is_reachendpoint_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Planning.is_reachEndpoint)
}

// .sim_msg.Vec3 current_point = 2;
inline bool Grading_Planning::has_current_point() const {
  return this != internal_default_instance() && current_point_ != NULL;
}
inline void Grading_Planning::clear_current_point() {
  if (GetArenaNoVirtual() == NULL && current_point_ != NULL) delete current_point_;
  current_point_ = NULL;
}
inline const ::sim_msg::Vec3& Grading_Planning::current_point() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Planning.current_point)
  return current_point_ != NULL ? *current_point_
                         : *::sim_msg::Vec3::internal_default_instance();
}
inline ::sim_msg::Vec3* Grading_Planning::mutable_current_point() {
  
  if (current_point_ == NULL) {
    current_point_ = new ::sim_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Planning.current_point)
  return current_point_;
}
inline ::sim_msg::Vec3* Grading_Planning::release_current_point() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Planning.current_point)
  
  ::sim_msg::Vec3* temp = current_point_;
  current_point_ = NULL;
  return temp;
}
inline void Grading_Planning::set_allocated_current_point(::sim_msg::Vec3* current_point) {
  delete current_point_;
  current_point_ = current_point;
  if (current_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Planning.current_point)
}

// .sim_msg.Vec3 endpoint = 3;
inline bool Grading_Planning::has_endpoint() const {
  return this != internal_default_instance() && endpoint_ != NULL;
}
inline void Grading_Planning::clear_endpoint() {
  if (GetArenaNoVirtual() == NULL && endpoint_ != NULL) delete endpoint_;
  endpoint_ = NULL;
}
inline const ::sim_msg::Vec3& Grading_Planning::endpoint() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Planning.endpoint)
  return endpoint_ != NULL ? *endpoint_
                         : *::sim_msg::Vec3::internal_default_instance();
}
inline ::sim_msg::Vec3* Grading_Planning::mutable_endpoint() {
  
  if (endpoint_ == NULL) {
    endpoint_ = new ::sim_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Planning.endpoint)
  return endpoint_;
}
inline ::sim_msg::Vec3* Grading_Planning::release_endpoint() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Planning.endpoint)
  
  ::sim_msg::Vec3* temp = endpoint_;
  endpoint_ = NULL;
  return temp;
}
inline void Grading_Planning::set_allocated_endpoint(::sim_msg::Vec3* endpoint) {
  delete endpoint_;
  endpoint_ = endpoint;
  if (endpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Planning.endpoint)
}

// -------------------------------------------------------------------

// Grading_CarExpData

// double id = 1;
inline void Grading_CarExpData::clear_id() {
  id_ = 0;
}
inline double Grading_CarExpData::id() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.CarExpData.id)
  return id_;
}
inline void Grading_CarExpData::set_id(double value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.CarExpData.id)
}

// double value = 2;
inline void Grading_CarExpData::clear_value() {
  value_ = 0;
}
inline double Grading_CarExpData::value() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.CarExpData.value)
  return value_;
}
inline void Grading_CarExpData::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.CarExpData.value)
}

// -------------------------------------------------------------------

// Grading_ExpData

// repeated .sim_msg.Grading.CarExpData distFromCar = 1;
inline int Grading_ExpData::distfromcar_size() const {
  return distfromcar_.size();
}
inline void Grading_ExpData::clear_distfromcar() {
  distfromcar_.Clear();
}
inline const ::sim_msg::Grading_CarExpData& Grading_ExpData::distfromcar(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.ExpData.distFromCar)
  return distfromcar_.Get(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::mutable_distfromcar(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.ExpData.distFromCar)
  return distfromcar_.Mutable(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::add_distfromcar() {
  // @@protoc_insertion_point(field_add:sim_msg.Grading.ExpData.distFromCar)
  return distfromcar_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
Grading_ExpData::mutable_distfromcar() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.Grading.ExpData.distFromCar)
  return &distfromcar_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
Grading_ExpData::distfromcar() const {
  // @@protoc_insertion_point(field_list:sim_msg.Grading.ExpData.distFromCar)
  return distfromcar_;
}

// repeated .sim_msg.Grading.CarExpData distFromCar_H = 2;
inline int Grading_ExpData::distfromcar_h_size() const {
  return distfromcar_h_.size();
}
inline void Grading_ExpData::clear_distfromcar_h() {
  distfromcar_h_.Clear();
}
inline const ::sim_msg::Grading_CarExpData& Grading_ExpData::distfromcar_h(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.ExpData.distFromCar_H)
  return distfromcar_h_.Get(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::mutable_distfromcar_h(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.ExpData.distFromCar_H)
  return distfromcar_h_.Mutable(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::add_distfromcar_h() {
  // @@protoc_insertion_point(field_add:sim_msg.Grading.ExpData.distFromCar_H)
  return distfromcar_h_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
Grading_ExpData::mutable_distfromcar_h() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.Grading.ExpData.distFromCar_H)
  return &distfromcar_h_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
Grading_ExpData::distfromcar_h() const {
  // @@protoc_insertion_point(field_list:sim_msg.Grading.ExpData.distFromCar_H)
  return distfromcar_h_;
}

// repeated .sim_msg.Grading.CarExpData distFromCar_V = 3;
inline int Grading_ExpData::distfromcar_v_size() const {
  return distfromcar_v_.size();
}
inline void Grading_ExpData::clear_distfromcar_v() {
  distfromcar_v_.Clear();
}
inline const ::sim_msg::Grading_CarExpData& Grading_ExpData::distfromcar_v(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.ExpData.distFromCar_V)
  return distfromcar_v_.Get(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::mutable_distfromcar_v(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.ExpData.distFromCar_V)
  return distfromcar_v_.Mutable(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::add_distfromcar_v() {
  // @@protoc_insertion_point(field_add:sim_msg.Grading.ExpData.distFromCar_V)
  return distfromcar_v_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
Grading_ExpData::mutable_distfromcar_v() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.Grading.ExpData.distFromCar_V)
  return &distfromcar_v_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
Grading_ExpData::distfromcar_v() const {
  // @@protoc_insertion_point(field_list:sim_msg.Grading.ExpData.distFromCar_V)
  return distfromcar_v_;
}

// repeated .sim_msg.Grading.CarExpData thFromCar = 4;
inline int Grading_ExpData::thfromcar_size() const {
  return thfromcar_.size();
}
inline void Grading_ExpData::clear_thfromcar() {
  thfromcar_.Clear();
}
inline const ::sim_msg::Grading_CarExpData& Grading_ExpData::thfromcar(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.ExpData.thFromCar)
  return thfromcar_.Get(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::mutable_thfromcar(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.ExpData.thFromCar)
  return thfromcar_.Mutable(index);
}
inline ::sim_msg::Grading_CarExpData* Grading_ExpData::add_thfromcar() {
  // @@protoc_insertion_point(field_add:sim_msg.Grading.ExpData.thFromCar)
  return thfromcar_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >*
Grading_ExpData::mutable_thfromcar() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.Grading.ExpData.thFromCar)
  return &thfromcar_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_CarExpData >&
Grading_ExpData::thfromcar() const {
  // @@protoc_insertion_point(field_list:sim_msg.Grading.ExpData.thFromCar)
  return thfromcar_;
}

// -------------------------------------------------------------------

// Grading_Statistics_DetailItem

// double eval_value = 1;
inline void Grading_Statistics_DetailItem::clear_eval_value() {
  eval_value_ = 0;
}
inline double Grading_Statistics_DetailItem::eval_value() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.DetailItem.eval_value)
  return eval_value_;
}
inline void Grading_Statistics_DetailItem::set_eval_value(double value) {
  
  eval_value_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.DetailItem.eval_value)
}

// bool is_enabled = 2;
inline void Grading_Statistics_DetailItem::clear_is_enabled() {
  is_enabled_ = false;
}
inline bool Grading_Statistics_DetailItem::is_enabled() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.DetailItem.is_enabled)
  return is_enabled_;
}
inline void Grading_Statistics_DetailItem::set_is_enabled(bool value) {
  
  is_enabled_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.DetailItem.is_enabled)
}

// bool is_pass = 3;
inline void Grading_Statistics_DetailItem::clear_is_pass() {
  is_pass_ = false;
}
inline bool Grading_Statistics_DetailItem::is_pass() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.DetailItem.is_pass)
  return is_pass_;
}
inline void Grading_Statistics_DetailItem::set_is_pass(bool value) {
  
  is_pass_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.DetailItem.is_pass)
}

// -------------------------------------------------------------------

// Grading_Statistics_Detail

// .sim_msg.Grading.Statistics.DetailItem count_overSpeed = 1;
inline bool Grading_Statistics_Detail::has_count_overspeed() const {
  return this != internal_default_instance() && count_overspeed_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_overspeed() {
  if (GetArenaNoVirtual() == NULL && count_overspeed_ != NULL) delete count_overspeed_;
  count_overspeed_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_overspeed() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_overSpeed)
  return count_overspeed_ != NULL ? *count_overspeed_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_overspeed() {
  
  if (count_overspeed_ == NULL) {
    count_overspeed_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_overSpeed)
  return count_overspeed_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_overspeed() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_overSpeed)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_overspeed_;
  count_overspeed_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_overspeed(::sim_msg::Grading_Statistics_DetailItem* count_overspeed) {
  delete count_overspeed_;
  count_overspeed_ = count_overspeed;
  if (count_overspeed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_overSpeed)
}

// .sim_msg.Grading.Statistics.DetailItem count_overAcceleration = 2;
inline bool Grading_Statistics_Detail::has_count_overacceleration() const {
  return this != internal_default_instance() && count_overacceleration_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_overacceleration() {
  if (GetArenaNoVirtual() == NULL && count_overacceleration_ != NULL) delete count_overacceleration_;
  count_overacceleration_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_overacceleration() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_overAcceleration)
  return count_overacceleration_ != NULL ? *count_overacceleration_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_overacceleration() {
  
  if (count_overacceleration_ == NULL) {
    count_overacceleration_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_overAcceleration)
  return count_overacceleration_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_overacceleration() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_overAcceleration)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_overacceleration_;
  count_overacceleration_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_overacceleration(::sim_msg::Grading_Statistics_DetailItem* count_overacceleration) {
  delete count_overacceleration_;
  count_overacceleration_ = count_overacceleration;
  if (count_overacceleration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_overAcceleration)
}

// .sim_msg.Grading.Statistics.DetailItem count_overDecelleration = 3;
inline bool Grading_Statistics_Detail::has_count_overdecelleration() const {
  return this != internal_default_instance() && count_overdecelleration_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_overdecelleration() {
  if (GetArenaNoVirtual() == NULL && count_overdecelleration_ != NULL) delete count_overdecelleration_;
  count_overdecelleration_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_overdecelleration() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_overDecelleration)
  return count_overdecelleration_ != NULL ? *count_overdecelleration_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_overdecelleration() {
  
  if (count_overdecelleration_ == NULL) {
    count_overdecelleration_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_overDecelleration)
  return count_overdecelleration_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_overdecelleration() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_overDecelleration)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_overdecelleration_;
  count_overdecelleration_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_overdecelleration(::sim_msg::Grading_Statistics_DetailItem* count_overdecelleration) {
  delete count_overdecelleration_;
  count_overdecelleration_ = count_overdecelleration;
  if (count_overdecelleration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_overDecelleration)
}

// .sim_msg.Grading.Statistics.DetailItem count_overTurningAcceleration = 4;
inline bool Grading_Statistics_Detail::has_count_overturningacceleration() const {
  return this != internal_default_instance() && count_overturningacceleration_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_overturningacceleration() {
  if (GetArenaNoVirtual() == NULL && count_overturningacceleration_ != NULL) delete count_overturningacceleration_;
  count_overturningacceleration_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_overturningacceleration() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_overTurningAcceleration)
  return count_overturningacceleration_ != NULL ? *count_overturningacceleration_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_overturningacceleration() {
  
  if (count_overturningacceleration_ == NULL) {
    count_overturningacceleration_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_overTurningAcceleration)
  return count_overturningacceleration_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_overturningacceleration() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_overTurningAcceleration)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_overturningacceleration_;
  count_overturningacceleration_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_overturningacceleration(::sim_msg::Grading_Statistics_DetailItem* count_overturningacceleration) {
  delete count_overturningacceleration_;
  count_overturningacceleration_ = count_overturningacceleration;
  if (count_overturningacceleration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_overTurningAcceleration)
}

// .sim_msg.Grading.Statistics.DetailItem count_tooCloseTTC = 5;
inline bool Grading_Statistics_Detail::has_count_tooclosettc() const {
  return this != internal_default_instance() && count_tooclosettc_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_tooclosettc() {
  if (GetArenaNoVirtual() == NULL && count_tooclosettc_ != NULL) delete count_tooclosettc_;
  count_tooclosettc_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_tooclosettc() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_tooCloseTTC)
  return count_tooclosettc_ != NULL ? *count_tooclosettc_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_tooclosettc() {
  
  if (count_tooclosettc_ == NULL) {
    count_tooclosettc_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_tooCloseTTC)
  return count_tooclosettc_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_tooclosettc() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_tooCloseTTC)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_tooclosettc_;
  count_tooclosettc_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_tooclosettc(::sim_msg::Grading_Statistics_DetailItem* count_tooclosettc) {
  delete count_tooclosettc_;
  count_tooclosettc_ = count_tooclosettc;
  if (count_tooclosettc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_tooCloseTTC)
}

// .sim_msg.Grading.Statistics.DetailItem count_tooCloseDistance = 6;
inline bool Grading_Statistics_Detail::has_count_tooclosedistance() const {
  return this != internal_default_instance() && count_tooclosedistance_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_tooclosedistance() {
  if (GetArenaNoVirtual() == NULL && count_tooclosedistance_ != NULL) delete count_tooclosedistance_;
  count_tooclosedistance_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_tooclosedistance() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_tooCloseDistance)
  return count_tooclosedistance_ != NULL ? *count_tooclosedistance_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_tooclosedistance() {
  
  if (count_tooclosedistance_ == NULL) {
    count_tooclosedistance_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_tooCloseDistance)
  return count_tooclosedistance_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_tooclosedistance() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_tooCloseDistance)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_tooclosedistance_;
  count_tooclosedistance_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_tooclosedistance(::sim_msg::Grading_Statistics_DetailItem* count_tooclosedistance) {
  delete count_tooclosedistance_;
  count_tooclosedistance_ = count_tooclosedistance;
  if (count_tooclosedistance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_tooCloseDistance)
}

// .sim_msg.Grading.Statistics.DetailItem count_overMaxPosError_H = 7;
inline bool Grading_Statistics_Detail::has_count_overmaxposerror_h() const {
  return this != internal_default_instance() && count_overmaxposerror_h_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_overmaxposerror_h() {
  if (GetArenaNoVirtual() == NULL && count_overmaxposerror_h_ != NULL) delete count_overmaxposerror_h_;
  count_overmaxposerror_h_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_overmaxposerror_h() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_overMaxPosError_H)
  return count_overmaxposerror_h_ != NULL ? *count_overmaxposerror_h_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_overmaxposerror_h() {
  
  if (count_overmaxposerror_h_ == NULL) {
    count_overmaxposerror_h_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_overMaxPosError_H)
  return count_overmaxposerror_h_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_overmaxposerror_h() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_overMaxPosError_H)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_overmaxposerror_h_;
  count_overmaxposerror_h_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_overmaxposerror_h(::sim_msg::Grading_Statistics_DetailItem* count_overmaxposerror_h) {
  delete count_overmaxposerror_h_;
  count_overmaxposerror_h_ = count_overmaxposerror_h;
  if (count_overmaxposerror_h) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_overMaxPosError_H)
}

// .sim_msg.Grading.Statistics.DetailItem average_PosError_H = 8;
inline bool Grading_Statistics_Detail::has_average_poserror_h() const {
  return this != internal_default_instance() && average_poserror_h_ != NULL;
}
inline void Grading_Statistics_Detail::clear_average_poserror_h() {
  if (GetArenaNoVirtual() == NULL && average_poserror_h_ != NULL) delete average_poserror_h_;
  average_poserror_h_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::average_poserror_h() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.average_PosError_H)
  return average_poserror_h_ != NULL ? *average_poserror_h_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_average_poserror_h() {
  
  if (average_poserror_h_ == NULL) {
    average_poserror_h_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.average_PosError_H)
  return average_poserror_h_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_average_poserror_h() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.average_PosError_H)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = average_poserror_h_;
  average_poserror_h_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_average_poserror_h(::sim_msg::Grading_Statistics_DetailItem* average_poserror_h) {
  delete average_poserror_h_;
  average_poserror_h_ = average_poserror_h;
  if (average_poserror_h) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.average_PosError_H)
}

// .sim_msg.Grading.Statistics.DetailItem max_PosError_H = 9;
inline bool Grading_Statistics_Detail::has_max_poserror_h() const {
  return this != internal_default_instance() && max_poserror_h_ != NULL;
}
inline void Grading_Statistics_Detail::clear_max_poserror_h() {
  if (GetArenaNoVirtual() == NULL && max_poserror_h_ != NULL) delete max_poserror_h_;
  max_poserror_h_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::max_poserror_h() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.max_PosError_H)
  return max_poserror_h_ != NULL ? *max_poserror_h_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_max_poserror_h() {
  
  if (max_poserror_h_ == NULL) {
    max_poserror_h_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.max_PosError_H)
  return max_poserror_h_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_max_poserror_h() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.max_PosError_H)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = max_poserror_h_;
  max_poserror_h_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_max_poserror_h(::sim_msg::Grading_Statistics_DetailItem* max_poserror_h) {
  delete max_poserror_h_;
  max_poserror_h_ = max_poserror_h;
  if (max_poserror_h) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.max_PosError_H)
}

// .sim_msg.Grading.Statistics.DetailItem max_PosError_H_L = 10;
inline bool Grading_Statistics_Detail::has_max_poserror_h_l() const {
  return this != internal_default_instance() && max_poserror_h_l_ != NULL;
}
inline void Grading_Statistics_Detail::clear_max_poserror_h_l() {
  if (GetArenaNoVirtual() == NULL && max_poserror_h_l_ != NULL) delete max_poserror_h_l_;
  max_poserror_h_l_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::max_poserror_h_l() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.max_PosError_H_L)
  return max_poserror_h_l_ != NULL ? *max_poserror_h_l_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_max_poserror_h_l() {
  
  if (max_poserror_h_l_ == NULL) {
    max_poserror_h_l_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.max_PosError_H_L)
  return max_poserror_h_l_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_max_poserror_h_l() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.max_PosError_H_L)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = max_poserror_h_l_;
  max_poserror_h_l_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_max_poserror_h_l(::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_l) {
  delete max_poserror_h_l_;
  max_poserror_h_l_ = max_poserror_h_l;
  if (max_poserror_h_l) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.max_PosError_H_L)
}

// .sim_msg.Grading.Statistics.DetailItem max_PosError_H_R = 11;
inline bool Grading_Statistics_Detail::has_max_poserror_h_r() const {
  return this != internal_default_instance() && max_poserror_h_r_ != NULL;
}
inline void Grading_Statistics_Detail::clear_max_poserror_h_r() {
  if (GetArenaNoVirtual() == NULL && max_poserror_h_r_ != NULL) delete max_poserror_h_r_;
  max_poserror_h_r_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::max_poserror_h_r() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.max_PosError_H_R)
  return max_poserror_h_r_ != NULL ? *max_poserror_h_r_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_max_poserror_h_r() {
  
  if (max_poserror_h_r_ == NULL) {
    max_poserror_h_r_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.max_PosError_H_R)
  return max_poserror_h_r_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_max_poserror_h_r() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.max_PosError_H_R)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = max_poserror_h_r_;
  max_poserror_h_r_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_max_poserror_h_r(::sim_msg::Grading_Statistics_DetailItem* max_poserror_h_r) {
  delete max_poserror_h_r_;
  max_poserror_h_r_ = max_poserror_h_r;
  if (max_poserror_h_r) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.max_PosError_H_R)
}

// .sim_msg.Grading.Statistics.DetailItem count_CrossSolidLine = 12;
inline bool Grading_Statistics_Detail::has_count_crosssolidline() const {
  return this != internal_default_instance() && count_crosssolidline_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_crosssolidline() {
  if (GetArenaNoVirtual() == NULL && count_crosssolidline_ != NULL) delete count_crosssolidline_;
  count_crosssolidline_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_crosssolidline() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_CrossSolidLine)
  return count_crosssolidline_ != NULL ? *count_crosssolidline_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_crosssolidline() {
  
  if (count_crosssolidline_ == NULL) {
    count_crosssolidline_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_CrossSolidLine)
  return count_crosssolidline_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_crosssolidline() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_CrossSolidLine)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_crosssolidline_;
  count_crosssolidline_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_crosssolidline(::sim_msg::Grading_Statistics_DetailItem* count_crosssolidline) {
  delete count_crosssolidline_;
  count_crosssolidline_ = count_crosssolidline;
  if (count_crosssolidline) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_CrossSolidLine)
}

// .sim_msg.Grading.Statistics.DetailItem count_RanRedLight = 13;
inline bool Grading_Statistics_Detail::has_count_ranredlight() const {
  return this != internal_default_instance() && count_ranredlight_ != NULL;
}
inline void Grading_Statistics_Detail::clear_count_ranredlight() {
  if (GetArenaNoVirtual() == NULL && count_ranredlight_ != NULL) delete count_ranredlight_;
  count_ranredlight_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::count_ranredlight() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.count_RanRedLight)
  return count_ranredlight_ != NULL ? *count_ranredlight_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_count_ranredlight() {
  
  if (count_ranredlight_ == NULL) {
    count_ranredlight_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.count_RanRedLight)
  return count_ranredlight_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_count_ranredlight() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.count_RanRedLight)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = count_ranredlight_;
  count_ranredlight_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_count_ranredlight(::sim_msg::Grading_Statistics_DetailItem* count_ranredlight) {
  delete count_ranredlight_;
  count_ranredlight_ = count_ranredlight;
  if (count_ranredlight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.count_RanRedLight)
}

// .sim_msg.Grading.Statistics.DetailItem reachEndPoint = 14;
inline bool Grading_Statistics_Detail::has_reachendpoint() const {
  return this != internal_default_instance() && reachendpoint_ != NULL;
}
inline void Grading_Statistics_Detail::clear_reachendpoint() {
  if (GetArenaNoVirtual() == NULL && reachendpoint_ != NULL) delete reachendpoint_;
  reachendpoint_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::reachendpoint() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.reachEndPoint)
  return reachendpoint_ != NULL ? *reachendpoint_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_reachendpoint() {
  
  if (reachendpoint_ == NULL) {
    reachendpoint_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.reachEndPoint)
  return reachendpoint_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_reachendpoint() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.reachEndPoint)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = reachendpoint_;
  reachendpoint_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_reachendpoint(::sim_msg::Grading_Statistics_DetailItem* reachendpoint) {
  delete reachendpoint_;
  reachendpoint_ = reachendpoint;
  if (reachendpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.reachEndPoint)
}

// .sim_msg.Grading.Statistics.DetailItem collision = 15;
inline bool Grading_Statistics_Detail::has_collision() const {
  return this != internal_default_instance() && collision_ != NULL;
}
inline void Grading_Statistics_Detail::clear_collision() {
  if (GetArenaNoVirtual() == NULL && collision_ != NULL) delete collision_;
  collision_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_Detail::collision() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.Detail.collision)
  return collision_ != NULL ? *collision_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::mutable_collision() {
  
  if (collision_ == NULL) {
    collision_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.Detail.collision)
  return collision_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_Detail::release_collision() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.Detail.collision)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = collision_;
  collision_ = NULL;
  return temp;
}
inline void Grading_Statistics_Detail::set_allocated_collision(::sim_msg::Grading_Statistics_DetailItem* collision) {
  delete collision_;
  collision_ = collision;
  if (collision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.Detail.collision)
}

// -------------------------------------------------------------------

// Grading_Statistics_CustomDetail

// .sim_msg.Grading.Statistics.DetailItem custom_ReachEndPoint = 1;
inline bool Grading_Statistics_CustomDetail::has_custom_reachendpoint() const {
  return this != internal_default_instance() && custom_reachendpoint_ != NULL;
}
inline void Grading_Statistics_CustomDetail::clear_custom_reachendpoint() {
  if (GetArenaNoVirtual() == NULL && custom_reachendpoint_ != NULL) delete custom_reachendpoint_;
  custom_reachendpoint_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_CustomDetail::custom_reachendpoint() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.CustomDetail.custom_ReachEndPoint)
  return custom_reachendpoint_ != NULL ? *custom_reachendpoint_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_CustomDetail::mutable_custom_reachendpoint() {
  
  if (custom_reachendpoint_ == NULL) {
    custom_reachendpoint_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.CustomDetail.custom_ReachEndPoint)
  return custom_reachendpoint_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_CustomDetail::release_custom_reachendpoint() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.CustomDetail.custom_ReachEndPoint)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = custom_reachendpoint_;
  custom_reachendpoint_ = NULL;
  return temp;
}
inline void Grading_Statistics_CustomDetail::set_allocated_custom_reachendpoint(::sim_msg::Grading_Statistics_DetailItem* custom_reachendpoint) {
  delete custom_reachendpoint_;
  custom_reachendpoint_ = custom_reachendpoint;
  if (custom_reachendpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.CustomDetail.custom_ReachEndPoint)
}

// .sim_msg.Grading.Statistics.DetailItem custom_maxPosError_Exceed = 2;
inline bool Grading_Statistics_CustomDetail::has_custom_maxposerror_exceed() const {
  return this != internal_default_instance() && custom_maxposerror_exceed_ != NULL;
}
inline void Grading_Statistics_CustomDetail::clear_custom_maxposerror_exceed() {
  if (GetArenaNoVirtual() == NULL && custom_maxposerror_exceed_ != NULL) delete custom_maxposerror_exceed_;
  custom_maxposerror_exceed_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_DetailItem& Grading_Statistics_CustomDetail::custom_maxposerror_exceed() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.CustomDetail.custom_maxPosError_Exceed)
  return custom_maxposerror_exceed_ != NULL ? *custom_maxposerror_exceed_
                         : *::sim_msg::Grading_Statistics_DetailItem::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_CustomDetail::mutable_custom_maxposerror_exceed() {
  
  if (custom_maxposerror_exceed_ == NULL) {
    custom_maxposerror_exceed_ = new ::sim_msg::Grading_Statistics_DetailItem;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.CustomDetail.custom_maxPosError_Exceed)
  return custom_maxposerror_exceed_;
}
inline ::sim_msg::Grading_Statistics_DetailItem* Grading_Statistics_CustomDetail::release_custom_maxposerror_exceed() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.CustomDetail.custom_maxPosError_Exceed)
  
  ::sim_msg::Grading_Statistics_DetailItem* temp = custom_maxposerror_exceed_;
  custom_maxposerror_exceed_ = NULL;
  return temp;
}
inline void Grading_Statistics_CustomDetail::set_allocated_custom_maxposerror_exceed(::sim_msg::Grading_Statistics_DetailItem* custom_maxposerror_exceed) {
  delete custom_maxposerror_exceed_;
  custom_maxposerror_exceed_ = custom_maxposerror_exceed;
  if (custom_maxposerror_exceed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.CustomDetail.custom_maxPosError_Exceed)
}

// -------------------------------------------------------------------

// Grading_Statistics

// string scene_name = 1;
inline void Grading_Statistics::clear_scene_name() {
  scene_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Grading_Statistics::scene_name() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.scene_name)
  return scene_name_.GetNoArena();
}
inline void Grading_Statistics::set_scene_name(const ::std::string& value) {
  
  scene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.scene_name)
}
#if LANG_CXX11
inline void Grading_Statistics::set_scene_name(::std::string&& value) {
  
  scene_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sim_msg.Grading.Statistics.scene_name)
}
#endif
inline void Grading_Statistics::set_scene_name(const char* value) {
  
  scene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sim_msg.Grading.Statistics.scene_name)
}
inline void Grading_Statistics::set_scene_name(const char* value, size_t size) {
  
  scene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sim_msg.Grading.Statistics.scene_name)
}
inline ::std::string* Grading_Statistics::mutable_scene_name() {
  
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.scene_name)
  return scene_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Grading_Statistics::release_scene_name() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.scene_name)
  
  return scene_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Grading_Statistics::set_allocated_scene_name(::std::string* scene_name) {
  if (scene_name != NULL) {
    
  } else {
    
  }
  scene_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_name);
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.scene_name)
}

// string report_date = 2;
inline void Grading_Statistics::clear_report_date() {
  report_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Grading_Statistics::report_date() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.report_date)
  return report_date_.GetNoArena();
}
inline void Grading_Statistics::set_report_date(const ::std::string& value) {
  
  report_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.report_date)
}
#if LANG_CXX11
inline void Grading_Statistics::set_report_date(::std::string&& value) {
  
  report_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sim_msg.Grading.Statistics.report_date)
}
#endif
inline void Grading_Statistics::set_report_date(const char* value) {
  
  report_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sim_msg.Grading.Statistics.report_date)
}
inline void Grading_Statistics::set_report_date(const char* value, size_t size) {
  
  report_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sim_msg.Grading.Statistics.report_date)
}
inline ::std::string* Grading_Statistics::mutable_report_date() {
  
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.report_date)
  return report_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Grading_Statistics::release_report_date() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.report_date)
  
  return report_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Grading_Statistics::set_allocated_report_date(::std::string* report_date) {
  if (report_date != NULL) {
    
  } else {
    
  }
  report_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report_date);
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.report_date)
}

// bool is_pass = 3;
inline void Grading_Statistics::clear_is_pass() {
  is_pass_ = false;
}
inline bool Grading_Statistics::is_pass() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.is_pass)
  return is_pass_;
}
inline void Grading_Statistics::set_is_pass(bool value) {
  
  is_pass_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.is_pass)
}

// double total_time = 4;
inline void Grading_Statistics::clear_total_time() {
  total_time_ = 0;
}
inline double Grading_Statistics::total_time() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.total_time)
  return total_time_;
}
inline void Grading_Statistics::set_total_time(double value) {
  
  total_time_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.total_time)
}

// double total_milleage = 5;
inline void Grading_Statistics::clear_total_milleage() {
  total_milleage_ = 0;
}
inline double Grading_Statistics::total_milleage() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.total_milleage)
  return total_milleage_;
}
inline void Grading_Statistics::set_total_milleage(double value) {
  
  total_milleage_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.total_milleage)
}

// bool is_timeout = 6;
inline void Grading_Statistics::clear_is_timeout() {
  is_timeout_ = false;
}
inline bool Grading_Statistics::is_timeout() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.is_timeout)
  return is_timeout_;
}
inline void Grading_Statistics::set_is_timeout(bool value) {
  
  is_timeout_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.is_timeout)
}

// string grading_xml = 7;
inline void Grading_Statistics::clear_grading_xml() {
  grading_xml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Grading_Statistics::grading_xml() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.grading_xml)
  return grading_xml_.GetNoArena();
}
inline void Grading_Statistics::set_grading_xml(const ::std::string& value) {
  
  grading_xml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.grading_xml)
}
#if LANG_CXX11
inline void Grading_Statistics::set_grading_xml(::std::string&& value) {
  
  grading_xml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sim_msg.Grading.Statistics.grading_xml)
}
#endif
inline void Grading_Statistics::set_grading_xml(const char* value) {
  
  grading_xml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sim_msg.Grading.Statistics.grading_xml)
}
inline void Grading_Statistics::set_grading_xml(const char* value, size_t size) {
  
  grading_xml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sim_msg.Grading.Statistics.grading_xml)
}
inline ::std::string* Grading_Statistics::mutable_grading_xml() {
  
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.grading_xml)
  return grading_xml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Grading_Statistics::release_grading_xml() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.grading_xml)
  
  return grading_xml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Grading_Statistics::set_allocated_grading_xml(::std::string* grading_xml) {
  if (grading_xml != NULL) {
    
  } else {
    
  }
  grading_xml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grading_xml);
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.grading_xml)
}

// .sim_msg.Grading.Statistics.Detail detail = 8;
inline bool Grading_Statistics::has_detail() const {
  return this != internal_default_instance() && detail_ != NULL;
}
inline void Grading_Statistics::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_Detail& Grading_Statistics::detail() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.detail)
  return detail_ != NULL ? *detail_
                         : *::sim_msg::Grading_Statistics_Detail::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_Detail* Grading_Statistics::mutable_detail() {
  
  if (detail_ == NULL) {
    detail_ = new ::sim_msg::Grading_Statistics_Detail;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.detail)
  return detail_;
}
inline ::sim_msg::Grading_Statistics_Detail* Grading_Statistics::release_detail() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.detail)
  
  ::sim_msg::Grading_Statistics_Detail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void Grading_Statistics::set_allocated_detail(::sim_msg::Grading_Statistics_Detail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.detail)
}

// .sim_msg.Grading.Statistics.CustomDetail custom_detail = 9;
inline bool Grading_Statistics::has_custom_detail() const {
  return this != internal_default_instance() && custom_detail_ != NULL;
}
inline void Grading_Statistics::clear_custom_detail() {
  if (GetArenaNoVirtual() == NULL && custom_detail_ != NULL) delete custom_detail_;
  custom_detail_ = NULL;
}
inline const ::sim_msg::Grading_Statistics_CustomDetail& Grading_Statistics::custom_detail() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.custom_detail)
  return custom_detail_ != NULL ? *custom_detail_
                         : *::sim_msg::Grading_Statistics_CustomDetail::internal_default_instance();
}
inline ::sim_msg::Grading_Statistics_CustomDetail* Grading_Statistics::mutable_custom_detail() {
  
  if (custom_detail_ == NULL) {
    custom_detail_ = new ::sim_msg::Grading_Statistics_CustomDetail;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.custom_detail)
  return custom_detail_;
}
inline ::sim_msg::Grading_Statistics_CustomDetail* Grading_Statistics::release_custom_detail() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.custom_detail)
  
  ::sim_msg::Grading_Statistics_CustomDetail* temp = custom_detail_;
  custom_detail_ = NULL;
  return temp;
}
inline void Grading_Statistics::set_allocated_custom_detail(::sim_msg::Grading_Statistics_CustomDetail* custom_detail) {
  delete custom_detail_;
  custom_detail_ = custom_detail;
  if (custom_detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.custom_detail)
}

// string reason = 10;
inline void Grading_Statistics::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Grading_Statistics::reason() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.Statistics.reason)
  return reason_.GetNoArena();
}
inline void Grading_Statistics::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sim_msg.Grading.Statistics.reason)
}
#if LANG_CXX11
inline void Grading_Statistics::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sim_msg.Grading.Statistics.reason)
}
#endif
inline void Grading_Statistics::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sim_msg.Grading.Statistics.reason)
}
inline void Grading_Statistics::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sim_msg.Grading.Statistics.reason)
}
inline ::std::string* Grading_Statistics::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.Statistics.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Grading_Statistics::release_reason() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.Statistics.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Grading_Statistics::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.Statistics.reason)
}

// -------------------------------------------------------------------

// Grading

// .sim_msg.Grading.Speed speed = 1;
inline bool Grading::has_speed() const {
  return this != internal_default_instance() && speed_ != NULL;
}
inline void Grading::clear_speed() {
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) delete speed_;
  speed_ = NULL;
}
inline const ::sim_msg::Grading_Speed& Grading::speed() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.speed)
  return speed_ != NULL ? *speed_
                         : *::sim_msg::Grading_Speed::internal_default_instance();
}
inline ::sim_msg::Grading_Speed* Grading::mutable_speed() {
  
  if (speed_ == NULL) {
    speed_ = new ::sim_msg::Grading_Speed;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.speed)
  return speed_;
}
inline ::sim_msg::Grading_Speed* Grading::release_speed() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.speed)
  
  ::sim_msg::Grading_Speed* temp = speed_;
  speed_ = NULL;
  return temp;
}
inline void Grading::set_allocated_speed(::sim_msg::Grading_Speed* speed) {
  delete speed_;
  speed_ = speed;
  if (speed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.speed)
}

// .sim_msg.Grading.Acceleration acceleration = 2;
inline bool Grading::has_acceleration() const {
  return this != internal_default_instance() && acceleration_ != NULL;
}
inline void Grading::clear_acceleration() {
  if (GetArenaNoVirtual() == NULL && acceleration_ != NULL) delete acceleration_;
  acceleration_ = NULL;
}
inline const ::sim_msg::Grading_Acceleration& Grading::acceleration() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.acceleration)
  return acceleration_ != NULL ? *acceleration_
                         : *::sim_msg::Grading_Acceleration::internal_default_instance();
}
inline ::sim_msg::Grading_Acceleration* Grading::mutable_acceleration() {
  
  if (acceleration_ == NULL) {
    acceleration_ = new ::sim_msg::Grading_Acceleration;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.acceleration)
  return acceleration_;
}
inline ::sim_msg::Grading_Acceleration* Grading::release_acceleration() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.acceleration)
  
  ::sim_msg::Grading_Acceleration* temp = acceleration_;
  acceleration_ = NULL;
  return temp;
}
inline void Grading::set_allocated_acceleration(::sim_msg::Grading_Acceleration* acceleration) {
  delete acceleration_;
  acceleration_ = acceleration;
  if (acceleration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.acceleration)
}

// repeated .sim_msg.Grading.Collision collision = 3;
inline int Grading::collision_size() const {
  return collision_.size();
}
inline void Grading::clear_collision() {
  collision_.Clear();
}
inline const ::sim_msg::Grading_Collision& Grading::collision(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.collision)
  return collision_.Get(index);
}
inline ::sim_msg::Grading_Collision* Grading::mutable_collision(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.collision)
  return collision_.Mutable(index);
}
inline ::sim_msg::Grading_Collision* Grading::add_collision() {
  // @@protoc_insertion_point(field_add:sim_msg.Grading.collision)
  return collision_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_Collision >*
Grading::mutable_collision() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.Grading.collision)
  return &collision_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sim_msg::Grading_Collision >&
Grading::collision() const {
  // @@protoc_insertion_point(field_list:sim_msg.Grading.collision)
  return collision_;
}

// .sim_msg.Grading.TimeHeadway timeHeadway = 4;
inline bool Grading::has_timeheadway() const {
  return this != internal_default_instance() && timeheadway_ != NULL;
}
inline void Grading::clear_timeheadway() {
  if (GetArenaNoVirtual() == NULL && timeheadway_ != NULL) delete timeheadway_;
  timeheadway_ = NULL;
}
inline const ::sim_msg::Grading_TimeHeadway& Grading::timeheadway() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.timeHeadway)
  return timeheadway_ != NULL ? *timeheadway_
                         : *::sim_msg::Grading_TimeHeadway::internal_default_instance();
}
inline ::sim_msg::Grading_TimeHeadway* Grading::mutable_timeheadway() {
  
  if (timeheadway_ == NULL) {
    timeheadway_ = new ::sim_msg::Grading_TimeHeadway;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.timeHeadway)
  return timeheadway_;
}
inline ::sim_msg::Grading_TimeHeadway* Grading::release_timeheadway() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.timeHeadway)
  
  ::sim_msg::Grading_TimeHeadway* temp = timeheadway_;
  timeheadway_ = NULL;
  return temp;
}
inline void Grading::set_allocated_timeheadway(::sim_msg::Grading_TimeHeadway* timeheadway) {
  delete timeheadway_;
  timeheadway_ = timeheadway;
  if (timeheadway) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.timeHeadway)
}

// .sim_msg.Grading.Algorithm algorithm = 5;
inline bool Grading::has_algorithm() const {
  return this != internal_default_instance() && algorithm_ != NULL;
}
inline void Grading::clear_algorithm() {
  if (GetArenaNoVirtual() == NULL && algorithm_ != NULL) delete algorithm_;
  algorithm_ = NULL;
}
inline const ::sim_msg::Grading_Algorithm& Grading::algorithm() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.algorithm)
  return algorithm_ != NULL ? *algorithm_
                         : *::sim_msg::Grading_Algorithm::internal_default_instance();
}
inline ::sim_msg::Grading_Algorithm* Grading::mutable_algorithm() {
  
  if (algorithm_ == NULL) {
    algorithm_ = new ::sim_msg::Grading_Algorithm;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.algorithm)
  return algorithm_;
}
inline ::sim_msg::Grading_Algorithm* Grading::release_algorithm() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.algorithm)
  
  ::sim_msg::Grading_Algorithm* temp = algorithm_;
  algorithm_ = NULL;
  return temp;
}
inline void Grading::set_allocated_algorithm(::sim_msg::Grading_Algorithm* algorithm) {
  delete algorithm_;
  algorithm_ = algorithm;
  if (algorithm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.algorithm)
}

// .sim_msg.Grading.Lane lane = 6;
inline bool Grading::has_lane() const {
  return this != internal_default_instance() && lane_ != NULL;
}
inline void Grading::clear_lane() {
  if (GetArenaNoVirtual() == NULL && lane_ != NULL) delete lane_;
  lane_ = NULL;
}
inline const ::sim_msg::Grading_Lane& Grading::lane() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.lane)
  return lane_ != NULL ? *lane_
                         : *::sim_msg::Grading_Lane::internal_default_instance();
}
inline ::sim_msg::Grading_Lane* Grading::mutable_lane() {
  
  if (lane_ == NULL) {
    lane_ = new ::sim_msg::Grading_Lane;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.lane)
  return lane_;
}
inline ::sim_msg::Grading_Lane* Grading::release_lane() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.lane)
  
  ::sim_msg::Grading_Lane* temp = lane_;
  lane_ = NULL;
  return temp;
}
inline void Grading::set_allocated_lane(::sim_msg::Grading_Lane* lane) {
  delete lane_;
  lane_ = lane;
  if (lane) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.lane)
}

// .sim_msg.Grading.TrafficLight trafficeLight = 7;
inline bool Grading::has_trafficelight() const {
  return this != internal_default_instance() && trafficelight_ != NULL;
}
inline void Grading::clear_trafficelight() {
  if (GetArenaNoVirtual() == NULL && trafficelight_ != NULL) delete trafficelight_;
  trafficelight_ = NULL;
}
inline const ::sim_msg::Grading_TrafficLight& Grading::trafficelight() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.trafficeLight)
  return trafficelight_ != NULL ? *trafficelight_
                         : *::sim_msg::Grading_TrafficLight::internal_default_instance();
}
inline ::sim_msg::Grading_TrafficLight* Grading::mutable_trafficelight() {
  
  if (trafficelight_ == NULL) {
    trafficelight_ = new ::sim_msg::Grading_TrafficLight;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.trafficeLight)
  return trafficelight_;
}
inline ::sim_msg::Grading_TrafficLight* Grading::release_trafficelight() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.trafficeLight)
  
  ::sim_msg::Grading_TrafficLight* temp = trafficelight_;
  trafficelight_ = NULL;
  return temp;
}
inline void Grading::set_allocated_trafficelight(::sim_msg::Grading_TrafficLight* trafficelight) {
  delete trafficelight_;
  trafficelight_ = trafficelight;
  if (trafficelight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.trafficeLight)
}

// .sim_msg.Grading.TimeStamp timeStamp = 8;
inline bool Grading::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline void Grading::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::sim_msg::Grading_TimeStamp& Grading::timestamp() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.timeStamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::sim_msg::Grading_TimeStamp::internal_default_instance();
}
inline ::sim_msg::Grading_TimeStamp* Grading::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::sim_msg::Grading_TimeStamp;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.timeStamp)
  return timestamp_;
}
inline ::sim_msg::Grading_TimeStamp* Grading::release_timestamp() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.timeStamp)
  
  ::sim_msg::Grading_TimeStamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void Grading::set_allocated_timestamp(::sim_msg::Grading_TimeStamp* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.timeStamp)
}

// double mileage = 9;
inline void Grading::clear_mileage() {
  mileage_ = 0;
}
inline double Grading::mileage() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.mileage)
  return mileage_;
}
inline void Grading::set_mileage(double value) {
  
  mileage_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Grading.mileage)
}

// .sim_msg.Grading.ExpData expData = 10;
inline bool Grading::has_expdata() const {
  return this != internal_default_instance() && expdata_ != NULL;
}
inline void Grading::clear_expdata() {
  if (GetArenaNoVirtual() == NULL && expdata_ != NULL) delete expdata_;
  expdata_ = NULL;
}
inline const ::sim_msg::Grading_ExpData& Grading::expdata() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.expData)
  return expdata_ != NULL ? *expdata_
                         : *::sim_msg::Grading_ExpData::internal_default_instance();
}
inline ::sim_msg::Grading_ExpData* Grading::mutable_expdata() {
  
  if (expdata_ == NULL) {
    expdata_ = new ::sim_msg::Grading_ExpData;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.expData)
  return expdata_;
}
inline ::sim_msg::Grading_ExpData* Grading::release_expdata() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.expData)
  
  ::sim_msg::Grading_ExpData* temp = expdata_;
  expdata_ = NULL;
  return temp;
}
inline void Grading::set_allocated_expdata(::sim_msg::Grading_ExpData* expdata) {
  delete expdata_;
  expdata_ = expdata;
  if (expdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.expData)
}

// .sim_msg.Grading.DistHeadway distHeadway = 11;
inline bool Grading::has_distheadway() const {
  return this != internal_default_instance() && distheadway_ != NULL;
}
inline void Grading::clear_distheadway() {
  if (GetArenaNoVirtual() == NULL && distheadway_ != NULL) delete distheadway_;
  distheadway_ = NULL;
}
inline const ::sim_msg::Grading_DistHeadway& Grading::distheadway() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.distHeadway)
  return distheadway_ != NULL ? *distheadway_
                         : *::sim_msg::Grading_DistHeadway::internal_default_instance();
}
inline ::sim_msg::Grading_DistHeadway* Grading::mutable_distheadway() {
  
  if (distheadway_ == NULL) {
    distheadway_ = new ::sim_msg::Grading_DistHeadway;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.distHeadway)
  return distheadway_;
}
inline ::sim_msg::Grading_DistHeadway* Grading::release_distheadway() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.distHeadway)
  
  ::sim_msg::Grading_DistHeadway* temp = distheadway_;
  distheadway_ = NULL;
  return temp;
}
inline void Grading::set_allocated_distheadway(::sim_msg::Grading_DistHeadway* distheadway) {
  delete distheadway_;
  distheadway_ = distheadway;
  if (distheadway) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.distHeadway)
}

// .sim_msg.Grading.Control control = 12;
inline bool Grading::has_control() const {
  return this != internal_default_instance() && control_ != NULL;
}
inline void Grading::clear_control() {
  if (GetArenaNoVirtual() == NULL && control_ != NULL) delete control_;
  control_ = NULL;
}
inline const ::sim_msg::Grading_Control& Grading::control() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.control)
  return control_ != NULL ? *control_
                         : *::sim_msg::Grading_Control::internal_default_instance();
}
inline ::sim_msg::Grading_Control* Grading::mutable_control() {
  
  if (control_ == NULL) {
    control_ = new ::sim_msg::Grading_Control;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.control)
  return control_;
}
inline ::sim_msg::Grading_Control* Grading::release_control() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.control)
  
  ::sim_msg::Grading_Control* temp = control_;
  control_ = NULL;
  return temp;
}
inline void Grading::set_allocated_control(::sim_msg::Grading_Control* control) {
  delete control_;
  control_ = control;
  if (control) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.control)
}

// .sim_msg.Grading.Planning planning = 13;
inline bool Grading::has_planning() const {
  return this != internal_default_instance() && planning_ != NULL;
}
inline void Grading::clear_planning() {
  if (GetArenaNoVirtual() == NULL && planning_ != NULL) delete planning_;
  planning_ = NULL;
}
inline const ::sim_msg::Grading_Planning& Grading::planning() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.planning)
  return planning_ != NULL ? *planning_
                         : *::sim_msg::Grading_Planning::internal_default_instance();
}
inline ::sim_msg::Grading_Planning* Grading::mutable_planning() {
  
  if (planning_ == NULL) {
    planning_ = new ::sim_msg::Grading_Planning;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.planning)
  return planning_;
}
inline ::sim_msg::Grading_Planning* Grading::release_planning() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.planning)
  
  ::sim_msg::Grading_Planning* temp = planning_;
  planning_ = NULL;
  return temp;
}
inline void Grading::set_allocated_planning(::sim_msg::Grading_Planning* planning) {
  delete planning_;
  planning_ = planning;
  if (planning) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.planning)
}

// .sim_msg.Grading.Acceleration lateral_acc = 14;
inline bool Grading::has_lateral_acc() const {
  return this != internal_default_instance() && lateral_acc_ != NULL;
}
inline void Grading::clear_lateral_acc() {
  if (GetArenaNoVirtual() == NULL && lateral_acc_ != NULL) delete lateral_acc_;
  lateral_acc_ = NULL;
}
inline const ::sim_msg::Grading_Acceleration& Grading::lateral_acc() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.lateral_acc)
  return lateral_acc_ != NULL ? *lateral_acc_
                         : *::sim_msg::Grading_Acceleration::internal_default_instance();
}
inline ::sim_msg::Grading_Acceleration* Grading::mutable_lateral_acc() {
  
  if (lateral_acc_ == NULL) {
    lateral_acc_ = new ::sim_msg::Grading_Acceleration;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.lateral_acc)
  return lateral_acc_;
}
inline ::sim_msg::Grading_Acceleration* Grading::release_lateral_acc() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.lateral_acc)
  
  ::sim_msg::Grading_Acceleration* temp = lateral_acc_;
  lateral_acc_ = NULL;
  return temp;
}
inline void Grading::set_allocated_lateral_acc(::sim_msg::Grading_Acceleration* lateral_acc) {
  delete lateral_acc_;
  lateral_acc_ = lateral_acc;
  if (lateral_acc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.lateral_acc)
}

// .sim_msg.Grading.Acceleration dec_acc = 15;
inline bool Grading::has_dec_acc() const {
  return this != internal_default_instance() && dec_acc_ != NULL;
}
inline void Grading::clear_dec_acc() {
  if (GetArenaNoVirtual() == NULL && dec_acc_ != NULL) delete dec_acc_;
  dec_acc_ = NULL;
}
inline const ::sim_msg::Grading_Acceleration& Grading::dec_acc() const {
  // @@protoc_insertion_point(field_get:sim_msg.Grading.dec_acc)
  return dec_acc_ != NULL ? *dec_acc_
                         : *::sim_msg::Grading_Acceleration::internal_default_instance();
}
inline ::sim_msg::Grading_Acceleration* Grading::mutable_dec_acc() {
  
  if (dec_acc_ == NULL) {
    dec_acc_ = new ::sim_msg::Grading_Acceleration;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.Grading.dec_acc)
  return dec_acc_;
}
inline ::sim_msg::Grading_Acceleration* Grading::release_dec_acc() {
  // @@protoc_insertion_point(field_release:sim_msg.Grading.dec_acc)
  
  ::sim_msg::Grading_Acceleration* temp = dec_acc_;
  dec_acc_ = NULL;
  return temp;
}
inline void Grading::set_allocated_dec_acc(::sim_msg::Grading_Acceleration* dec_acc) {
  delete dec_acc_;
  dec_acc_ = dec_acc;
  if (dec_acc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.Grading.dec_acc)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sim_msg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sim_msg::GradingCollisionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingCollisionState>() {
  return ::sim_msg::GradingCollisionState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingAlgorithmState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingAlgorithmState>() {
  return ::sim_msg::GradingAlgorithmState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingTrafficLightState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingTrafficLightState>() {
  return ::sim_msg::GradingTrafficLightState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingSpeedState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingSpeedState>() {
  return ::sim_msg::GradingSpeedState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingAccelerationState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingAccelerationState>() {
  return ::sim_msg::GradingAccelerationState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingTimeHeadwayState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingTimeHeadwayState>() {
  return ::sim_msg::GradingTimeHeadwayState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingDistHeadwayState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingDistHeadwayState>() {
  return ::sim_msg::GradingDistHeadwayState_descriptor();
}
template <> struct is_proto_enum< ::sim_msg::GradingPosErrorState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sim_msg::GradingPosErrorState>() {
  return ::sim_msg::GradingPosErrorState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_grading_2eproto__INCLUDED
