// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: localLocation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "localLocation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sim_msg {
class LocalLocationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LocalLocation> {
} _LocalLocation_default_instance_;

namespace protobuf_localLocation_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, vx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, vy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, yaw_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, time_thislocalframe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, time_lastlocalframe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, thisframeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLocation, transform_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(LocalLocation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LocalLocation_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "localLocation.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _LocalLocation_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::sim_msg::protobuf_header_2eproto::InitDefaults();
  _LocalLocation_default_instance_.DefaultConstruct();
  _LocalLocation_default_instance_.get_mutable()->header_ = const_cast< ::sim_msg::Header*>(
      ::sim_msg::Header::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023localLocation.proto\022\007sim_msg\032\014header.p"
      "roto\"\334\001\n\rLocalLocation\022\037\n\006header\030\001 \001(\0132\017"
      ".sim_msg.Header\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\n\n"
      "\002vx\030\004 \001(\001\022\n\n\002vy\030\005 \001(\001\022\013\n\003yaw\030\006 \001(\001\022\r\n\005ya"
      "w_v\030\007 \001(\001\022\033\n\023time_thisLocalFrame\030\010 \001(\001\022\033"
      "\n\023time_lastLocalFrame\030\t \001(\001\022\023\n\013thisFrame"
      "ID\030\n \001(\004\022\021\n\ttransform\030\013 \003(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 275);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "localLocation.proto", &protobuf_RegisterTypes);
  ::sim_msg::protobuf_header_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_localLocation_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalLocation::kHeaderFieldNumber;
const int LocalLocation::kXFieldNumber;
const int LocalLocation::kYFieldNumber;
const int LocalLocation::kVxFieldNumber;
const int LocalLocation::kVyFieldNumber;
const int LocalLocation::kYawFieldNumber;
const int LocalLocation::kYawVFieldNumber;
const int LocalLocation::kTimeThisLocalFrameFieldNumber;
const int LocalLocation::kTimeLastLocalFrameFieldNumber;
const int LocalLocation::kThisFrameIDFieldNumber;
const int LocalLocation::kTransformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalLocation::LocalLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_localLocation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.LocalLocation)
}
LocalLocation::LocalLocation(const LocalLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transform_(from.transform_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::sim_msg::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&thisframeid_) -
    reinterpret_cast<char*>(&x_) + sizeof(thisframeid_));
  // @@protoc_insertion_point(copy_constructor:sim_msg.LocalLocation)
}

void LocalLocation::SharedCtor() {
  ::memset(&header_, 0, reinterpret_cast<char*>(&thisframeid_) -
    reinterpret_cast<char*>(&header_) + sizeof(thisframeid_));
  _cached_size_ = 0;
}

LocalLocation::~LocalLocation() {
  // @@protoc_insertion_point(destructor:sim_msg.LocalLocation)
  SharedDtor();
}

void LocalLocation::SharedDtor() {
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void LocalLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalLocation::descriptor() {
  protobuf_localLocation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_localLocation_2eproto::file_level_metadata[0].descriptor;
}

const LocalLocation& LocalLocation::default_instance() {
  protobuf_localLocation_2eproto::InitDefaults();
  return *internal_default_instance();
}

LocalLocation* LocalLocation::New(::google::protobuf::Arena* arena) const {
  LocalLocation* n = new LocalLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.LocalLocation)
  transform_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&x_, 0, reinterpret_cast<char*>(&thisframeid_) -
    reinterpret_cast<char*>(&x_) + sizeof(thisframeid_));
}

bool LocalLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.LocalLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sim_msg.Header header = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vx = 4;
      case 4: {
        if (tag == 33u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vy = 5;
      case 5: {
        if (tag == 41u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw = 6;
      case 6: {
        if (tag == 49u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw_v = 7;
      case 7: {
        if (tag == 57u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_thisLocalFrame = 8;
      case 8: {
        if (tag == 65u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_thislocalframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_lastLocalFrame = 9;
      case 9: {
        if (tag == 73u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_lastlocalframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 thisFrameID = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &thisframeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double transform = 11;
      case 11: {
        if (tag == 90u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_transform())));
        } else if (tag == 89u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 90u, input, this->mutable_transform())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.LocalLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.LocalLocation)
  return false;
#undef DO_
}

void LocalLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.LocalLocation)
  // .sim_msg.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // double vx = 4;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vx(), output);
  }

  // double vy = 5;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->vy(), output);
  }

  // double yaw = 6;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->yaw(), output);
  }

  // double yaw_v = 7;
  if (this->yaw_v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->yaw_v(), output);
  }

  // double time_thisLocalFrame = 8;
  if (this->time_thislocalframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->time_thislocalframe(), output);
  }

  // double time_lastLocalFrame = 9;
  if (this->time_lastlocalframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->time_lastlocalframe(), output);
  }

  // uint64 thisFrameID = 10;
  if (this->thisframeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->thisframeid(), output);
  }

  // repeated double transform = 11;
  if (this->transform_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_transform_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->transform().data(), this->transform_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:sim_msg.LocalLocation)
}

::google::protobuf::uint8* LocalLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.LocalLocation)
  // .sim_msg.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // double vx = 4;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vx(), target);
  }

  // double vy = 5;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->vy(), target);
  }

  // double yaw = 6;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->yaw(), target);
  }

  // double yaw_v = 7;
  if (this->yaw_v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->yaw_v(), target);
  }

  // double time_thisLocalFrame = 8;
  if (this->time_thislocalframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->time_thislocalframe(), target);
  }

  // double time_lastLocalFrame = 9;
  if (this->time_lastlocalframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->time_lastlocalframe(), target);
  }

  // uint64 thisFrameID = 10;
  if (this->thisframeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->thisframeid(), target);
  }

  // repeated double transform = 11;
  if (this->transform_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _transform_cached_byte_size_, target);
  }
  for (int i = 0; i < this->transform_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->transform(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.LocalLocation)
  return target;
}

size_t LocalLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.LocalLocation)
  size_t total_size = 0;

  // repeated double transform = 11;
  {
    unsigned int count = this->transform_size();
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _transform_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .sim_msg.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double vx = 4;
  if (this->vx() != 0) {
    total_size += 1 + 8;
  }

  // double vy = 5;
  if (this->vy() != 0) {
    total_size += 1 + 8;
  }

  // double yaw = 6;
  if (this->yaw() != 0) {
    total_size += 1 + 8;
  }

  // double yaw_v = 7;
  if (this->yaw_v() != 0) {
    total_size += 1 + 8;
  }

  // double time_thisLocalFrame = 8;
  if (this->time_thislocalframe() != 0) {
    total_size += 1 + 8;
  }

  // double time_lastLocalFrame = 9;
  if (this->time_lastlocalframe() != 0) {
    total_size += 1 + 8;
  }

  // uint64 thisFrameID = 10;
  if (this->thisframeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->thisframeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.LocalLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.LocalLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.LocalLocation)
    MergeFrom(*source);
  }
}

void LocalLocation::MergeFrom(const LocalLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.LocalLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transform_.MergeFrom(from.transform_);
  if (from.has_header()) {
    mutable_header()->::sim_msg::Header::MergeFrom(from.header());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.yaw_v() != 0) {
    set_yaw_v(from.yaw_v());
  }
  if (from.time_thislocalframe() != 0) {
    set_time_thislocalframe(from.time_thislocalframe());
  }
  if (from.time_lastlocalframe() != 0) {
    set_time_lastlocalframe(from.time_lastlocalframe());
  }
  if (from.thisframeid() != 0) {
    set_thisframeid(from.thisframeid());
  }
}

void LocalLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.LocalLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalLocation::CopyFrom(const LocalLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.LocalLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalLocation::IsInitialized() const {
  return true;
}

void LocalLocation::Swap(LocalLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalLocation::InternalSwap(LocalLocation* other) {
  transform_.UnsafeArenaSwap(&other->transform_);
  std::swap(header_, other->header_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(vx_, other->vx_);
  std::swap(vy_, other->vy_);
  std::swap(yaw_, other->yaw_);
  std::swap(yaw_v_, other->yaw_v_);
  std::swap(time_thislocalframe_, other->time_thislocalframe_);
  std::swap(time_lastlocalframe_, other->time_lastlocalframe_);
  std::swap(thisframeid_, other->thisframeid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalLocation::GetMetadata() const {
  protobuf_localLocation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_localLocation_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalLocation

// .sim_msg.Header header = 1;
bool LocalLocation::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void LocalLocation::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::sim_msg::Header& LocalLocation::header() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.header)
  return header_ != NULL ? *header_
                         : *::sim_msg::Header::internal_default_instance();
}
::sim_msg::Header* LocalLocation::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::sim_msg::Header;
  }
  // @@protoc_insertion_point(field_mutable:sim_msg.LocalLocation.header)
  return header_;
}
::sim_msg::Header* LocalLocation::release_header() {
  // @@protoc_insertion_point(field_release:sim_msg.LocalLocation.header)
  
  ::sim_msg::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void LocalLocation::set_allocated_header(::sim_msg::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sim_msg.LocalLocation.header)
}

// double x = 2;
void LocalLocation::clear_x() {
  x_ = 0;
}
double LocalLocation::x() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.x)
  return x_;
}
void LocalLocation::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.x)
}

// double y = 3;
void LocalLocation::clear_y() {
  y_ = 0;
}
double LocalLocation::y() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.y)
  return y_;
}
void LocalLocation::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.y)
}

// double vx = 4;
void LocalLocation::clear_vx() {
  vx_ = 0;
}
double LocalLocation::vx() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.vx)
  return vx_;
}
void LocalLocation::set_vx(double value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.vx)
}

// double vy = 5;
void LocalLocation::clear_vy() {
  vy_ = 0;
}
double LocalLocation::vy() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.vy)
  return vy_;
}
void LocalLocation::set_vy(double value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.vy)
}

// double yaw = 6;
void LocalLocation::clear_yaw() {
  yaw_ = 0;
}
double LocalLocation::yaw() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.yaw)
  return yaw_;
}
void LocalLocation::set_yaw(double value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.yaw)
}

// double yaw_v = 7;
void LocalLocation::clear_yaw_v() {
  yaw_v_ = 0;
}
double LocalLocation::yaw_v() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.yaw_v)
  return yaw_v_;
}
void LocalLocation::set_yaw_v(double value) {
  
  yaw_v_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.yaw_v)
}

// double time_thisLocalFrame = 8;
void LocalLocation::clear_time_thislocalframe() {
  time_thislocalframe_ = 0;
}
double LocalLocation::time_thislocalframe() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.time_thisLocalFrame)
  return time_thislocalframe_;
}
void LocalLocation::set_time_thislocalframe(double value) {
  
  time_thislocalframe_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.time_thisLocalFrame)
}

// double time_lastLocalFrame = 9;
void LocalLocation::clear_time_lastlocalframe() {
  time_lastlocalframe_ = 0;
}
double LocalLocation::time_lastlocalframe() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.time_lastLocalFrame)
  return time_lastlocalframe_;
}
void LocalLocation::set_time_lastlocalframe(double value) {
  
  time_lastlocalframe_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.time_lastLocalFrame)
}

// uint64 thisFrameID = 10;
void LocalLocation::clear_thisframeid() {
  thisframeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 LocalLocation::thisframeid() const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.thisFrameID)
  return thisframeid_;
}
void LocalLocation::set_thisframeid(::google::protobuf::uint64 value) {
  
  thisframeid_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.thisFrameID)
}

// repeated double transform = 11;
int LocalLocation::transform_size() const {
  return transform_.size();
}
void LocalLocation::clear_transform() {
  transform_.Clear();
}
double LocalLocation::transform(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.LocalLocation.transform)
  return transform_.Get(index);
}
void LocalLocation::set_transform(int index, double value) {
  transform_.Set(index, value);
  // @@protoc_insertion_point(field_set:sim_msg.LocalLocation.transform)
}
void LocalLocation::add_transform(double value) {
  transform_.Add(value);
  // @@protoc_insertion_point(field_add:sim_msg.LocalLocation.transform)
}
const ::google::protobuf::RepeatedField< double >&
LocalLocation::transform() const {
  // @@protoc_insertion_point(field_list:sim_msg.LocalLocation.transform)
  return transform_;
}
::google::protobuf::RepeatedField< double >*
LocalLocation::mutable_transform() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.LocalLocation.transform)
  return &transform_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sim_msg

// @@protoc_insertion_point(global_scope)
