// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trajectory.proto

#ifndef PROTOBUF_trajectory_2eproto__INCLUDED
#define PROTOBUF_trajectory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace sim_msg {
class Trajectory;
class TrajectoryDefaultTypeInternal;
extern TrajectoryDefaultTypeInternal _Trajectory_default_instance_;
class TrajectoryPoint;
class TrajectoryPointDefaultTypeInternal;
extern TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;
}  // namespace sim_msg

namespace sim_msg {

namespace protobuf_trajectory_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_trajectory_2eproto

// ===================================================================

class TrajectoryPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.TrajectoryPoint) */ {
 public:
  TrajectoryPoint();
  virtual ~TrajectoryPoint();

  TrajectoryPoint(const TrajectoryPoint& from);

  inline TrajectoryPoint& operator=(const TrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrajectoryPoint& default_instance();

  static inline const TrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const TrajectoryPoint*>(
               &_TrajectoryPoint_default_instance_);
  }

  void Swap(TrajectoryPoint* other);

  // implements Message ----------------------------------------------

  inline TrajectoryPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  TrajectoryPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrajectoryPoint& from);
  void MergeFrom(const TrajectoryPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double t = 3;
  void clear_t();
  static const int kTFieldNumber = 3;
  double t() const;
  void set_t(double value);

  // double v = 4;
  void clear_v();
  static const int kVFieldNumber = 4;
  double v() const;
  void set_v(double value);

  // double theta = 5;
  void clear_theta();
  static const int kThetaFieldNumber = 5;
  double theta() const;
  void set_theta(double value);

  // double kappa = 6;
  void clear_kappa();
  static const int kKappaFieldNumber = 6;
  double kappa() const;
  void set_kappa(double value);

  // double s = 7;
  void clear_s();
  static const int kSFieldNumber = 7;
  double s() const;
  void set_s(double value);

  // double a = 8;
  void clear_a();
  static const int kAFieldNumber = 8;
  double a() const;
  void set_a(double value);

  // double z = 9;
  void clear_z();
  static const int kZFieldNumber = 9;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:sim_msg.TrajectoryPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double t_;
  double v_;
  double theta_;
  double kappa_;
  double s_;
  double a_;
  double z_;
  mutable int _cached_size_;
  friend struct  protobuf_trajectory_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Trajectory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sim_msg.Trajectory) */ {
 public:
  Trajectory();
  virtual ~Trajectory();

  Trajectory(const Trajectory& from);

  inline Trajectory& operator=(const Trajectory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Trajectory& default_instance();

  static inline const Trajectory* internal_default_instance() {
    return reinterpret_cast<const Trajectory*>(
               &_Trajectory_default_instance_);
  }

  void Swap(Trajectory* other);

  // implements Message ----------------------------------------------

  inline Trajectory* New() const PROTOBUF_FINAL { return New(NULL); }

  Trajectory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Trajectory& from);
  void MergeFrom(const Trajectory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Trajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sim_msg.TrajectoryPoint point = 1;
  int point_size() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  const ::sim_msg::TrajectoryPoint& point(int index) const;
  ::sim_msg::TrajectoryPoint* mutable_point(int index);
  ::sim_msg::TrajectoryPoint* add_point();
  ::google::protobuf::RepeatedPtrField< ::sim_msg::TrajectoryPoint >*
      mutable_point();
  const ::google::protobuf::RepeatedPtrField< ::sim_msg::TrajectoryPoint >&
      point() const;

  // float a = 2;
  void clear_a();
  static const int kAFieldNumber = 2;
  float a() const;
  void set_a(float value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 flag = 4;
  void clear_flag();
  static const int kFlagFieldNumber = 4;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sim_msg.Trajectory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::sim_msg::TrajectoryPoint > point_;
  float a_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 flag_;
  mutable int _cached_size_;
  friend struct  protobuf_trajectory_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TrajectoryPoint

// double x = 1;
inline void TrajectoryPoint::clear_x() {
  x_ = 0;
}
inline double TrajectoryPoint::x() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.x)
  return x_;
}
inline void TrajectoryPoint::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.x)
}

// double y = 2;
inline void TrajectoryPoint::clear_y() {
  y_ = 0;
}
inline double TrajectoryPoint::y() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.y)
  return y_;
}
inline void TrajectoryPoint::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.y)
}

// double t = 3;
inline void TrajectoryPoint::clear_t() {
  t_ = 0;
}
inline double TrajectoryPoint::t() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.t)
  return t_;
}
inline void TrajectoryPoint::set_t(double value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.t)
}

// double v = 4;
inline void TrajectoryPoint::clear_v() {
  v_ = 0;
}
inline double TrajectoryPoint::v() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.v)
  return v_;
}
inline void TrajectoryPoint::set_v(double value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.v)
}

// double theta = 5;
inline void TrajectoryPoint::clear_theta() {
  theta_ = 0;
}
inline double TrajectoryPoint::theta() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.theta)
  return theta_;
}
inline void TrajectoryPoint::set_theta(double value) {
  
  theta_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.theta)
}

// double kappa = 6;
inline void TrajectoryPoint::clear_kappa() {
  kappa_ = 0;
}
inline double TrajectoryPoint::kappa() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.kappa)
  return kappa_;
}
inline void TrajectoryPoint::set_kappa(double value) {
  
  kappa_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.kappa)
}

// double s = 7;
inline void TrajectoryPoint::clear_s() {
  s_ = 0;
}
inline double TrajectoryPoint::s() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.s)
  return s_;
}
inline void TrajectoryPoint::set_s(double value) {
  
  s_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.s)
}

// double a = 8;
inline void TrajectoryPoint::clear_a() {
  a_ = 0;
}
inline double TrajectoryPoint::a() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.a)
  return a_;
}
inline void TrajectoryPoint::set_a(double value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.a)
}

// double z = 9;
inline void TrajectoryPoint::clear_z() {
  z_ = 0;
}
inline double TrajectoryPoint::z() const {
  // @@protoc_insertion_point(field_get:sim_msg.TrajectoryPoint.z)
  return z_;
}
inline void TrajectoryPoint::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.TrajectoryPoint.z)
}

// -------------------------------------------------------------------

// Trajectory

// repeated .sim_msg.TrajectoryPoint point = 1;
inline int Trajectory::point_size() const {
  return point_.size();
}
inline void Trajectory::clear_point() {
  point_.Clear();
}
inline const ::sim_msg::TrajectoryPoint& Trajectory::point(int index) const {
  // @@protoc_insertion_point(field_get:sim_msg.Trajectory.point)
  return point_.Get(index);
}
inline ::sim_msg::TrajectoryPoint* Trajectory::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:sim_msg.Trajectory.point)
  return point_.Mutable(index);
}
inline ::sim_msg::TrajectoryPoint* Trajectory::add_point() {
  // @@protoc_insertion_point(field_add:sim_msg.Trajectory.point)
  return point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sim_msg::TrajectoryPoint >*
Trajectory::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:sim_msg.Trajectory.point)
  return &point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sim_msg::TrajectoryPoint >&
Trajectory::point() const {
  // @@protoc_insertion_point(field_list:sim_msg.Trajectory.point)
  return point_;
}

// float a = 2;
inline void Trajectory::clear_a() {
  a_ = 0;
}
inline float Trajectory::a() const {
  // @@protoc_insertion_point(field_get:sim_msg.Trajectory.a)
  return a_;
}
inline void Trajectory::set_a(float value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Trajectory.a)
}

// int32 type = 3;
inline void Trajectory::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Trajectory::type() const {
  // @@protoc_insertion_point(field_get:sim_msg.Trajectory.type)
  return type_;
}
inline void Trajectory::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Trajectory.type)
}

// int32 flag = 4;
inline void Trajectory::clear_flag() {
  flag_ = 0;
}
inline ::google::protobuf::int32 Trajectory::flag() const {
  // @@protoc_insertion_point(field_get:sim_msg.Trajectory.flag)
  return flag_;
}
inline void Trajectory::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:sim_msg.Trajectory.flag)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sim_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_trajectory_2eproto__INCLUDED
